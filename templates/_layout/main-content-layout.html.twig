<div x-data="{ sidebarOpen: localStorage.getItem('sidebarOpen') === 'true' }"
     @toggle-sidebar.window="sidebarOpen = !sidebarOpen; localStorage.setItem('sidebarOpen', sidebarOpen.toString())"
     @toggle-sidebar-close.window="sidebarOpen = false" class="h-screen flex overflow-hidden bg-slate-50">
    <div :class="sidebarOpen ? 'lg:block' : 'lg:hidden'">
        <div x-show="sidebarOpen" class="fixed inset-0 flex z-50 lg:hidden"
             x-description="Off-canvas menu for mobile, show/hide based on off-canvas menu state." x-ref="dialog"
             aria-modal="true">
            <div x-show="sidebarOpen" x-transition:enter="transition-opacity ease-linear duration-300"
                 x-transition:enter-start="opacity-0" x-transition:enter-end="opacity-100"
                 x-transition:leave="transition-opacity ease-linear duration-300" x-transition:leave-start="opacity-100"
                 x-transition:leave-end="opacity-0" class="fixed inset-0 bg-slate-900 bg-opacity-50 backdrop-blur-sm"
                 x-description="Off-canvas menu overlay, show/hide based off-canvas menu state."
                 @click="sidebarOpen = false; localStorage.setItem('sidebarOpen', 'false')" aria-hidden="true"></div>

            <div x-show="sidebarOpen" x-transition:enter="transition ease-in-out duration-300 transform"
                 x-transition:enter-start="-translate-x-full" x-transition:enter-end="translate-x-0"
                 x-transition:leave="transition ease-in-out duration-300 transform"
                 x-transition:leave-start="translate-x-0" x-transition:leave-end="-translate-x-full"
                 class="relative flex-1 flex flex-col max-w-xs w-full bg-white shadow-2xl">
                <div x-show="sidebarOpen" x-transition:enter="ease-in-out duration-300"
                     x-transition:enter-start="opacity-0" x-transition:enter-end="opacity-100"
                     x-transition:leave="ease-in-out duration-300" x-transition:leave-start="opacity-100"
                     x-transition:leave-end="opacity-0" class="absolute top-0 right-0 -mr-12 pt-2">
                    <button type="button"
                            class="ml-1 flex items-center justify-center h-10 w-10 rounded-full bg-white/10 backdrop-blur-sm focus:outline-none focus:ring-2 focus:ring-inset focus:ring-white transition-all duration-200 hover:bg-white/20"
                            @click="sidebarOpen = false; localStorage.setItem('sidebarOpen', 'false')">
                        <span class="sr-only">{{ "Close sidebar"|t }}</span>
                        <svg class="h-6 w-6 text-white" xmlns="http://www.w3.org/2000/svg" fill="none"
                             viewbox="0 0 24 24" stroke="currentColor" aria-hidden="true">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                  d="M6 18L18 6M6 6l12 12"/>
                        </svg>
                    </button>
                </div>

                <div class="flex-shrink-0 flex items-center lg:px-4">
                    {% include '@vactory_dashboard/_layout/sidebar.html.twig' %}
                </div>
            </div>

            <div
                    class="flex-shrink-0 w-14" aria-hidden="true">
                <!-- Dummy element to force sidebar to shrink to fit close icon -->
            </div>
        </div>

        <!-- Static sidebar for desktop -->
        <div x-show="sidebarOpen" x-transition:enter="transition ease-in-out duration-300 transform"
             x-transition:enter-start="-translate-x-full" x-transition:enter-end="translate-x-0"
             x-transition:leave="transition ease-in-out duration-300 transform" x-transition:leave-start="translate-x-0"
             x-transition:leave-end="-translate-x-full" class="hidden lg:flex lg:flex-shrink-0 lg:h-full">
            {% include '@vactory_dashboard/_layout/sidebar.html.twig' %}
        </div>
    </div>
    <div
            x-data="contentSearch" class="flex flex-col w-0 flex-1 overflow-hidden">
        {# removed z-0 #}
        <div class="relative flex-shrink-0 flex h-16 bg-white shadow-sm border-b border-slate-200">
            <div class="flex-1 px-3 lg:px-6 flex justify-between">
                <div
                        class="flex-1 flex items-center">
                    <!-- Sidebar toggle button -->
                    <button @click="$dispatch('toggle-sidebar')" type="button"
                            class="pr-3 lg:pr-4 text-slate-500 hover:text-primary-600 transition-colors duration-200 h-10 flex items-center"
                            x-data>
                        <span class="sr-only">{{ "Toggle sidebar"|t }}</span>
                        <svg x-show="!sidebarOpen" class="h-5 w-5" xmlns="http://www.w3.org/2000/svg" fill="none"
                             viewbox="0 0 24 24" stroke="currentColor" aria-hidden="true">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                  d="M4 6h16M4 12h16M4 18h16"/>
                        </svg>
                        <svg x-show="sidebarOpen" class="h-5 w-5" xmlns="http://www.w3.org/2000/svg" fill="none"
                             viewbox="0 0 24 24" stroke="currentColor" aria-hidden="true">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                  d="M11 19l-7-7 7-7m8 14l-7-7 7-7"/>
                        </svg>
                    </button>
                    <div class="max-lg:justify-end w-full flex items-center gap-2">
                        <div @click="showMobileSearch = !showMobileSearch"
                             class="mr-auto p-3 lg:hidden cursor-pointer text-slate-500 hover:text-primary-600 transition-colors duration-200 rounded-lg hover:bg-slate-50">
                            <template x-if="!showMobileSearch">
                                {% include '@twigComponents/icons/search.html.twig' %}
                            </template>
                            <template x-if="showMobileSearch">
                                {% include '@twigComponents/icons/close.html.twig' %}
                            </template>
                        </div>
                        <div :class="showMobileSearch ? '' : 'max-lg:hidden'"
                             class="max-lg:absolute max-lg:top-[63px] max-lg:z-[40] max-lg:bg-white max-lg:left-1/2 max-lg:-translate-x-1/2 max-lg:p-3 max-lg:border max-lg:border-slate-200 max-lg:shadow-xl relative w-full text-slate-400 focus-within:text-slate-600">
                            <div class="absolute inset-y-0 left-0 flex items-center pointer-events-none pl-5 lg:pl-4">
                                {% include '@twigComponents/icons/search.html.twig' %}
                            </div>
                            <input
                                    x-model="query" @input.debounce.300ms="globalSearch" id="search-field"
                                    class="block w-full h-10 pl-8 lg:pl-12 pr-3 lg:pr-4 py-3 border text-slate-900 placeholder-slate-400 focus:outline-none focus:placeholder-slate-300 focus:ring-0 sm:text-sm bg-slate-50/50 rounded-lg transition-all duration-200 focus:bg-white focus:shadow-sm text-sm leading-6"
                                    placeholder="Rechercher une page..." type="search"/>

                            {# search auto-complete results #}
                            <ul
                                    x-show="!loading && query.length >= 2"
                                    x-transition:enter="transition ease-out duration-200"
                                    x-transition:enter-start="opacity-0 translate-y-1"
                                    x-transition:enter-end="opacity-100 translate-y-0"
                                    x-transition:leave="transition ease-in duration-150"
                                    x-transition:leave-start="opacity-100 translate-y-0"
                                    x-transition:leave-end="opacity-0 translate-y-1"
                                    class="absolute left-0 z-[100] w-full bg-white border border-slate-200 rounded-xl shadow-xl mt-2 overflow-hidden">

                                {# data state #}
                                <template x-if="results.length > 0">
                                    <template x-for="(item, index) in results" :key="index">
                                        <li class="even:bg-slate-50/50 text-sm text-slate-700 font-medium cursor-pointer border-b border-slate-100 last:border-b-0">
                                            <a class="flex items-center justify-between px-4 py-3 w-full cursor-pointer hover:bg-primary-50 transition-colors duration-150"
                                               :href="item.url"
                                               :target="item.entity_type === 'media' ? '_blank' : null">
                                                <div class="flex items-center">
                                                    <template x-if="item.isImage">
                                                        <img class="bg-slate-100 w-10 h-10 border border-slate-200 rounded-lg mr-3 object-cover"
                                                             :src="item.url" :alt="item.label"/>
                                                    </template>
                                                    <span class="inline-block text-slate-700"
                                                          x-html="item.label"></span>
                                                </div>
                                                <div class="flex items-center">
                                                    <span class="capitalize min-w-[max-content] text-slate-500 text-xs"
                                                          x-text="item.entity_label"></span>
                                                    <svg x-show="item.entity_type === 'media'"
                                                         xmlns="http://www.w3.org/2000/svg" fill="none"
                                                         viewbox="0 0 24 24" stroke-width="1.5" stroke="currentColor"
                                                         class="text-slate-400 ml-2 w-4 h-4">
                                                        <path stroke-linecap="round" stroke-linejoin="round"
                                                              d="M13.5 6H5.25A2.25 2.25 0 0 0 3 8.25v10.5A2.25 2.25 0 0 0 5.25 21h10.5A2.25 2.25 0 0 0 18 18.75V10.5m-10.5 6L21 3m0 0h-5.25M21 3v5.25"/>
                                                    </svg>
                                                </div>
                                            </a>
                                        </li>
                                    </template>
                                </template>

                                {# empty state #}
                                <template x-if="!loading && results.length === 0">
                                    <li class="text-sm text-slate-500 font-medium px-4 py-3">{{ "Aucun résultat"|t }}</li>
                                </template>
                            </ul>

                            {# search auto-complete loader #}
                            <ul x-show="loading && query.length >= 2"
                                x-transition:enter="transition ease-out duration-200"
                                x-transition:enter-start="opacity-0 translate-y-1"
                                x-transition:enter-end="opacity-100 translate-y-0"
                                x-transition:leave="transition ease-in duration-150"
                                x-transition:leave-start="opacity-100 translate-y-0"
                                x-transition:leave-end="opacity-0 translate-y-1"
                                class="absolute left-0 z-[100] w-full bg-white border border-slate-200 rounded-xl shadow-xl mt-2 overflow-hidden">
                                <li class="text-sm text-slate-500 font-medium px-4 py-3">
                                    <span class="flex-1 animate-pulse w-full inline-block h-6 bg-slate-200 rounded-lg"></span>
                                </li>
                            </ul>
                        </div>

                        {# bloc ssl  #}
                        {% if user.hasPermission('administer dashboard configuration') %}
                            <div id="ssl" x-data="sslStatusComponent()" x-init="fetchStatus()"
                                 x-show="status && status.valid_till && status.issuer_o" class="relative   ">
                                <template x-if="loading">
                                    <div class="inline-flex items-center text-xs text-gray-500">
                                        <div class="animate-pulse h-3 w-3 bg-gray-300 rounded-full mr-1.5"></div>
                                        <span class="opacity-75">{{ 'Vérification SSL...'|t }}</span>
                                    </div>
                                </template>
                                <template x-if="!loading && error">
                                    <div class="inline-flex items-center text-xs text-red-500">
                                        <svg class="h-3.5 w-3.5 mr-1.5" fill="none" stroke="currentColor"
                                             viewbox="0 0 24 24">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                                  d="M12 9v2m0 4h.01M12 12a9 9 0 110-18 9 9 0 010 18z"/>
                                        </svg>
                                        <span>{{ 'Erreur SSL'|t }}</span>
                                    </div>
                                </template>
                                <template x-if="!loading && !error">
                                    <div>
                                        <button class="inline-flex items-center text-xs" :class="statusColor"
                                                @click="showDetails = !showDetails">
                                            <template x-if="icon === 'ok'">
                                                <svg class="h-4 w-4 mr-1 text-green-500" width="24" height="24"
                                                     viewbox="0 0 24 24" stroke-width="2" stroke="currentColor"
                                                     fill="none"
                                                     stroke-linecap="round" stroke-linejoin="round">
                                                    <path stroke="none" d="M0 0h24v24H0z"/>
                                                    <path d="M9 12l2 2l4 -4"/>
                                                    <path d="M12 3a12 12 0 0 0 8.5 3a12 12 0 0 1 -8.5 15a12 12 0 0 1 -8.5 -15a12 12 0 0 0 8.5 -3"/>
                                                </svg>
                                            </template>
                                            <template x-if="icon === 'warning'">
                                                <svg class="h-3.5 w-3.5 mr-1.5 text-yellow-500" fill="none"
                                                     stroke="currentColor" viewbox="0 0 24 24">
                                                    <path stroke-linecap="round" stroke-linejoin="round"
                                                          stroke-width="2"
                                                          d="M13 16h-1v-4h-1m1-4h.01M12 2a10 10 0 100 20 10 10 0 000-20z"/>
                                                </svg>
                                            </template>
                                            <template x-if="icon === 'error'">
                                                <svg class="h-4 w-4 text-red-400 mr-1" width="24" height="24"
                                                     viewbox="0 0 24 24" stroke-width="2" stroke="currentColor"
                                                     fill="none"
                                                     stroke-linecap="round" stroke-linejoin="round">
                                                    <path stroke="none" d="M0 0h24v24H0z"/>
                                                    <path d="M12 9v2m0 4v.01"/>
                                                    <path d="M5.07 19H19a2 2 0 0 0 1.75 -2.75L13.75 4a2 2 0 0 0 -3.5 0L3.25 16.25a2 2 0 0 0 1.75 2.75"/>
                                                </svg>
                                            </template>
                                            <span class="whitespace-nowrap"
                                                  x-text="
                                                icon === 'ok' ? '{{ 'SSL'|t }}' :
                                                (icon === 'error' ? '{{ 'SSL'|t }}' :
                                                (icon === 'warning' ? '{{ 'SSL'|t }}' : ''))
                                              ">
                                        </span>
                                        </button>
                                        <template x-if="showDetails">
                                            <div class="absolute z-40 right-0 mt-2 w-64 bg-white rounded-lg shadow-lg border border-gray-100 overflow-hidden p-3 text-xs">
                                                <div class="flex justify-between items-center mb-2">
                                                    <h3 class="text font-semibold text-gray-900 ">{{ 'Détails du certificat
                                                    SSL'|t }}</h3>
                                                    <button @click="showDetails = false"
                                                            class="text-gray-400 hover:text-gray-500">×
                                                    </button>
                                                </div>
                                                <div class="space-y-1.5">
                                                    <p>
                                                        <span class="font-medium text-gray-500 mr-2">{{ 'Émetteur:'|t }}</span>
                                                        <span x-text="status.issuer_o || 'Inconnu'"></span>
                                                    </p>
                                                    <p>
                                                        <span class="font-medium text-gray-500 mr-2">{{ "Valide jusqu'au:"|t }}</span>
                                                        <span x-text="status.valid_till"></span>
                                                    </p>
                                                    <p>
                                                        <span class="font-medium text-gray-500 mr-2">{{ "Jours restants:"|t }}</span>
                                                        <span x-text="status.days_left"></span>
                                                    </p>
                                                    <p>
                                                        <span class="font-medium text-gray-500 mr-2">{{ "Statut:"|t }}</span>
                                                        <span :class="statusColor"
                                                              x-text="status.cert_valid ? 'Valide' : 'Expiré'"></span>
                                                    </p>
                                                    <template x-if="!status.cert_valid">
                                                        <div class="mt-2 text-red-600 border-t border-gray-200 pt-2">
                                                            <p class="font-medium">{{ "Action requise:"|t }}</p>
                                                            <p>{{ "Veuillez renouveler le certificat SSL."|t }}</p>
                                                        </div>
                                                    </template>
                                                    <template x-if="status.cert_valid && status.days_left < 30">
                                                        <div class="mt-2 text-yellow-600 border-t border-gray-200 pt-2">
                                                            <p class="font-medium">{{ "Attention:"|t }}</p>
                                                            <p>{{ "Le certificat SSL expire bientôt." }}</p>
                                                        </div>
                                                    </template>
                                                </div>
                                            </div>
                                        </template>
                                    </div>
                                </template>
                            </div>
                        {% endif %}
                        {# translation dropdown #}
                        <div id="language" x-data="{ open: false }" class="relative inline-block text-left">
                            <div>
                                <button
                                        @click="open = !open"
                                        type="button"
                                        class="text-gray-700 inline-flex w-full justify-center rounded-lg bg-white px-2 lg:px-3 py-2 text-sm font-semibold shadow-sm ring-1 ring-inset ring-slate-200 hover:bg-slate-50 h-10"
                                        id="menu-button"
                                        :aria-expanded="open"
                                        aria-haspopup="true"
                                >
                                    <span class="max-lg:hidden">{{ current_language | t }}</span>
                                    <span class="lg:hidden">{{ current_language | t | slice(0, 2) }}</span>
                                    <svg class="-mr-1 size-5 text-gray-400" viewBox="0 0 20 20" fill="currentColor"
                                         aria-hidden="true" data-slot="icon">
                                        <path fill-rule="evenodd"
                                              d="M5.22 8.22a.75.75 0 0 1 1.06 0L10 11.94l3.72-3.72a.75.75 0 1 1 1.06 1.06l-4.25 4.25a.75.75 0 0 1-1.06 0L5.22 9.28a.75.75 0 0 1 0-1.06Z"
                                              clip-rule="evenodd"/>
                                    </svg>
                                </button>
                            </div>

                            <!-- Dropdown -->
                            <div x-show="open" @click.outside="open = false"
                                 x-transition:enter="transition ease-out duration-100"
                                 x-transition:enter-start="transform opacity-0 scale-95"
                                 x-transition:enter-end="transform opacity-100 scale-100"
                                 x-transition:leave="transition ease-in duration-75"
                                 x-transition:leave-start="transform opacity-100 scale-100"
                                 x-transition:leave-end="transform opacity-0 scale-95"
                                 class="absolute right-0 z-40 mt-2 w-[max-content] origin-top-right divide-y divide-slate-100 rounded-xl bg-white shadow-xl ring-1 ring-slate-200 focus:outline-none overflow-hidden"
                                 role="menu" aria-orientation="vertical" aria-labelledby="menu-button" tabindex="-1">
                                <div class="py-1" role="none">
                                    {% for language in languages %}
                                        <a href="{{ language.url }}"
                                           class="flex-1 w-full flex justify-start px-4 py-3 text-sm text-slate-700 hover:bg-primary-50 hover:text-primary-700 transition-colors duration-150"
                                           role="menuitem">
                                            {{ language.name | t }}
                                            {% if language.is_default %}
                                                <span class="ml-2 inline-flex items-center rounded-full bg-primary-100 px-2 py-1 text-xs font-medium text-primary-700 ring-1 ring-inset ring-primary-600/20">{{ "Default" | t }}</span>
                                            {% endif %}
                                        </a>
                                    {% endfor %}
                                </div>
                            </div>
                        </div>

                        {# support section #}
                        <template x-if="support.isPopulated">
                            <div class="relative">
                                <template x-if="supportLoading">
                                    <button class="mr-4 flex items-center gap-2 px-4 rounded-lg hover:bg-slate-50 border border-slate-200 transition-colors shadow-sm h-10">
                                        <span class="animate-pulse inline-block h-2 bg-slate-300 w-16 rounded"></span>
                                        <div class="animate-pulse bg-slate-300 h-7 w-7 rounded-full flex items-center justify-center"></div>
                                    </button>
                                </template>

                                <template x-if="!supportLoading">
                                    <div class="w-full">
                                        <button @click="showSupport = !showSupport"
                                                @keydown.escape="showSupport = !showSupport"
                                                class="flex items-center gap-2 lg:px-4 lg:border border-slate-200 rounded-lg hover:bg-slate-50 lg:hover:shadow-md transition-all duration-200 group h-10">
                                            <img alt="Contact VOID"
                                                 class="h-10 lg:h-7 w-10 lg:w-7 rounded-full ring-2 ring-primary-100 lg:group-hover:ring-primary-200 transition-all duration-200 shrink-0"
                                                 :src="support.image ? support.image : '{{ drupal_url(active_theme_path() ~ '/assets/images/support.jpg', {absolute: true}) }}'">
                                            <span class="max-lg:hidden text-sm text-slate-700 font-medium">{{ "Support"|t }}</span>
                                        </button>
                                    </div>
                                </template>

                                <div @click.outside="showSupport = false" x-show="showSupport"
                                     class="absolute z-40 -right-10 lg:right-0 mt-3 w-60 md:w-80 bg-white rounded-xl shadow-xl border border-slate-200 overflow-hidden">
                                    <div class="bg-gradient-to-r from-primary-50 to-primary-100 p-4 border-b border-slate-200">
                                        <div class="flex items-center">
                                            <img :alt="support.full_name"
                                                 class="h-12 w-12 rounded-full object-cover mr-3 border-2 border-white shadow-sm"
                                                 :src="support.image ? support.image : '{{ drupal_url(active_theme_path() ~ '/assets/images/support.jpg', {absolute: true}) }}'">
                                            <div>
                                                <h3 class="font-semibold text-slate-900"
                                                    x-text="support.full_name"></h3>
                                                <p class="text-primary-600 text-sm font-medium"
                                                   x-text="support.title"></p>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="p-4 space-y-2">
                                        <div class="flex items-center text-sm rounded-lg hover:bg-slate-50 p-3 transition-colors group">
                                            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewbox="0 0 24 24"
                                                 stroke-width="1.5" stroke="currentColor" aria-hidden="true"
                                                 data-slot="icon"
                                                 class="h-5 w-5 text-primary-500 mr-3 flex-shrink-0 group-hover:text-primary-600 transition-colors">
                                                <path stroke-linecap="round" stroke-linejoin="round"
                                                      d="M21.75 6.75v10.5a2.25 2.25 0 0 1-2.25 2.25h-15a2.25 2.25 0 0 1-2.25-2.25V6.75m19.5 0A2.25 2.25 0 0 0 19.5 4.5h-15a2.25 2.25 0 0 0-2.25 2.25m19.5 0v.243a2.25 2.25 0 0 1-1.07 1.916l-7.5 4.615a2.25 2.25 0 0 1-2.36 0L3.32 8.91a2.25 2.25 0 0 1-1.07-1.916V6.75"></path>
                                            </svg>
                                            <a :href="`mailto:${support.email}`"
                                               class="text-slate-700 hover:text-primary-700 text-sm font-medium transition-colors"
                                               x-text="support.email"></a>
                                        </div>
                                        <div class="flex items-center text-sm rounded-lg hover:bg-slate-50 p-3 transition-colors group">
                                            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewbox="0 0 24 24"
                                                 stroke-width="1.5" stroke="currentColor" aria-hidden="true"
                                                 data-slot="icon"
                                                 class="h-5 w-5 text-primary-500 mr-3 flex-shrink-0 group-hover:text-primary-600 transition-colors">
                                                <path stroke-linecap="round" stroke-linejoin="round"
                                                      d="M2.25 6.75c0 8.284 6.716 15 15 15h2.25a2.25 2.25 0 0 0 2.25-2.25v-1.372c0-.516-.351-.966-.852-1.091l-4.423-1.106c-.44-.11-.902.055-1.173.417l-.97 1.293c-.282.376-.769.542-1.21.38a12.035 12.035 0 0 1-7.143-7.143c-.162-.441.004-.928.38-1.21l1.293-.97c.363-.271.527-.734.417-1.173L6.963 3.102a1.125 1.125 0 0 0-1.091-.852H4.5A2.25 2.25 0 0 0 2.25 4.5v2.25Z"></path>
                                            </svg>
                                            <a :href="`tel:${support.phone}`" target="_blank" rel="noopener noreferrer"
                                               class="text-slate-700 hover:text-primary-700 text-sm font-medium transition-colors"
                                               x-text="support.phone"></a>
                                        </div>
                                        {% if redmineProjectId is defined and redmineProjectId is not empty %}
                                            <div class="pt-3 mt-2 border-t border-slate-100">
                                                <a href="https://redmine3.void.fr/projects/{{ redmineProjectId }}/issues/new"
                                                   target="_blank"
                                                   class="w-full flex items-center justify-center gap-2 bg-gradient-to-r from-primary-500 to-primary-600 text-white rounded-lg hover:from-primary-600 hover:to-primary-700 transition-all duration-200 text-sm font-semibold shadow-sm hover:shadow-md h-10">
                                                    <svg xmlns="http://www.w3.org/2000/svg" fill="none"
                                                         viewbox="0 0 24 24" stroke-width="1.5" stroke="currentColor"
                                                         aria-hidden="true" data-slot="icon" class="h-4 w-4">
                                                        <path stroke-linecap="round" stroke-linejoin="round"
                                                              d="M16.5 6v.75m0 3v.75m0 3v.75m0 3V18m-9-5.25h5.25M7.5 15h3M3.375 5.25c-.621 0-1.125.504-1.125 1.125v3.026a2.999 2.999 0 0 1 0 5.198v3.026c0 .621.504 1.125 1.125 1.125h17.25c.621 0 1.125-.504 1.125-1.125v-3.026a2.999 2.999 0 0 1 0-5.198V6.375c0-.621-.504-1.125-1.125-1.125H3.375Z"></path>
                                                    </svg>
                                                    {{ "Créer un ticket"|t }}
                                                </a>
                                            </div>
                                        {% endif %}

                                    </div>
                                </div>
                            </div>
                        </template>

                        {# profile section #}
                        <div id="profile" class="relative">
                            <template x-if="profileLoading">
                                <button class="flex items-center gap-2 px-4 rounded-lg hover:bg-slate-50 border border-slate-200 transition-colors shadow-sm h-10">
                                    <span class="animate-pulse inline-block h-2 bg-slate-300 w-20 rounded"></span>
                                    <div class="animate-pulse bg-slate-300 h-8 w-8 rounded-full flex items-center justify-center"></div>
                                </button>
                            </template>

                            <template x-if="!profileLoading">
                                <button @click="showProfile = !showProfile" @keydown.escape="showProfile = !showProfile"
                                        class="capitalize flex items-center gap-3 p-0 border-slate-200 transition-all duration-200 group h-10 rounded-lg lg:px-4 lg:hover:bg-slate-50 lg:hover:shadow-md lg:border">
                                    <span class="max-lg:hidden max-w-52 truncate text-sm font-medium text-slate-700 group-hover:text-slate-900"
                                          x-text="profile.name"></span>
                                    <div class="h-10 w-10 lg:h-8 lg:w-8 rounded-full bg-gradient-to-br from-primary-400 to-primary-500 flex items-center justify-center text-white font-semibold text-sm shadow-sm"
                                         x-text="getFirstLetter(profile.name)"></div>
                                </button>
                            </template>

                            <div @click.outside="showProfile = false" x-show="showProfile"
                                 class="absolute z-40 right-0 mt-3 w-72 bg-white rounded-xl shadow-xl border border-slate-200 overflow-hidden">
                                <div class="p-4 border-b border-slate-100 bg-gradient-to-r from-slate-50 to-slate-100/50">
                                    <div class="flex flex-col">
                                        <span class="font-semibold text-slate-900 capitalize"
                                              x-text="profile.name"></span>
                                        <span class="text-sm text-slate-600 mt-1" x-text="profile.email"></span>
                                        <template x-if="profile && profile.roles">
                                            <div class="flex items-center flex-wrap capitalize mt-2">
                                                <template x-for="(role, index) in profile.roles" :key="index">
                                                    <span class="mt-1 mr-2 inline-flex items-center px-3 py-1 rounded-full text-xs font-medium bg-primary-100 text-primary-700 border border-primary-200"
                                                          x-text="role.label"></span>
                                                </template>
                                            </div>
                                        </template>

                                    </div>
                                </div>

                                <div class="flex flex-col gap-2 px-4 py-3">
                                    <template x-if="profile && profile.hasAdvancedRoleAccess">
                                        <a href="{{ advanced_mode_url }}" target="_blank"
                                           class="group relative w-full text-left px-4 text-sm font-semibold text-white bg-gradient-to-r from-primary-500 to-primary-600 hover:from-primary-600 hover:to-primary-700 rounded-lg shadow-sm hover:shadow-md transition-all duration-200 flex items-center justify-between overflow-hidden h-10">
											<span class="flex items-center relative z-10">
												<svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-2" fill="none"
                                                     viewbox="0 0 24 24" stroke="currentColor">
													<path stroke-linecap="round" stroke-linejoin="round"
                                                          stroke-width="2"
                                                          d="M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z"/>
													<path stroke-linecap="round" stroke-linejoin="round"
                                                          stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"/>
												</svg>
												{{ "Mode avancé"|t }}
											</span>
                                        </a>
                                    </template>
                                    <button @click="logout"
                                            class="group w-full text-left px-4 text-sm font-semibold text-red-600 bg-red-50 hover:bg-red-100 hover:text-red-700 rounded-lg transition-all duration-200 flex items-center justify-between border border-red-200 hover:border-red-300 hover:shadow-sm h-10">
										<span class="flex items-center">
											<svg xmlns="http://www.w3.org/2000/svg"
                                                 class="h-4 w-4 mr-2 group-hover:scale-110 transition-transform duration-200"
                                                 fill="none" viewbox="0 0 24 24" stroke="currentColor">
												<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                                      d="M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1"></path>
											</svg>
											{{ "Déconnexion" | t }}
										</span>
                                    </button>
                                </div>

                            </div>
                        </div>

                    </div>
                </div>
            </div>
        </div>
        <main class="flex-1 relative overflow-y-auto focus:outline-none bg-gradient-to-br from-slate-50 to-slate-100/50">
            <div class="max-lg:pb-[200px] p-3 lg:p-8"> {% block content %}{% endblock %}
            </div>
        </main>
    </div>
</div>

<script>
  // Mark body as Alpine.js ready once initialized
  document.addEventListener('alpine:initialized', () => {
    document.body.classList.add('alpine-ready');
  });

  // Close sidebar when clicking on links (mobile only)
  document.addEventListener('click', function (event) {
    const target = event.target;
    // Check if the clicked element is a link or is inside a link
    const link = target.closest('a');
    if (link && link.getAttribute('href') && link.getAttribute('href') !== '#') {
      // Check if the link is inside the sidebar
      const sidebar = link.closest('aside');
      if (sidebar) {
        // Only close sidebar on screens smaller than 1024px (mobile/tablet)
        if (window.innerWidth < 1024) {
          // Close the sidebar
          localStorage.setItem('sidebarOpen', 'false');
          // Dispatch event to update the Alpine.js state
          window.dispatchEvent(new CustomEvent('toggle-sidebar-close'));
        }
      }
    }
  });

  document.addEventListener('alpine:init', () => {
    Alpine.store('limit', 100);
    Alpine.data('contentSearch', () => ({
      query: '',
      results: [],
      bundle: 'vactory_page',
      loading: true,
      showProfile: false,
      showSupport: false,
      profileLoading: false,
      supportLoading: false,
      profile: [],
      support: [],
      showMobileSearch: false,
      notification: {
        show: false,
        error: false,
        message: '',
      },

      async globalSearch() {
        if (this.query.length < 2) {
          this.results = [];
          return;
        }

        const params = new URLSearchParams({ q: this.query });

        try {
          this.loading = true;
          const response = await fetch(`{{ path('vactory_dashboard.global_search') }}?${
            params.toString()
          }`);
          const data = await response.json();
          this.results = data.results;
          console.log('Search: ', this.results);
        } catch (error) {
          console.error('Search error:', error);
          this.results = [];
        } finally {
          this.loading = false;
        }
      },

      select(item) {
        this.query = item.label;
      },

      setNotification(isError, message) {
        this.notification.show = true;
        this.notification.error = isError;
        this.notification.message = message;
      },

      closeNotification() {
        this.notification.show = false;
        this.notification.error = false;
      },

      highlight(term, text) {
        if (!term) {
          return text;
        }
        const regex = new RegExp(`(${term})`, 'gi');
        return text.replace(regex, '<mark>$1</mark>');
      },

      async getProfile() {
        try {
          this.profileLoading = true;
          const response = await fetch(`{{ path('vactory_dashboard.profile') }}`);
          const data = await response.json();
          this.profile = data;
          this.profileLoading = true;
        } catch (error) {
          console.error('Profile error:', error);
          this.profile = [];
        } finally {
          this.profileLoading = false;
        }
      },

      async getSupport() {
        try {
          this.supportLoading = true;
          const response = await fetch(`{{ path('advanced_dashboard.support.data') }}`);
          const data = await response.json();
          this.support = data;
          this.supportLoading = true;
        } catch (error) {
          console.error('Support error:', error);
          this.support = [];
        } finally {
          this.supportLoading = false;
        }
      },

      getFirstLetter(name) {
        return typeof name === 'string' && name.length > 0 ? name.charAt(0).toUpperCase() : '';
      },

      async logout() {
        try {
          this.loading = true;
          const response = await fetch(`{{ path('vactory_dashboard.logout') }}`);
          const data = await response.json();
          this.results = data;
          if (data.redirect) {
            window.location.href = data.redirect;
          }
        } catch (error) {
          console.error('Logout error:', error);
        }
      },

      init() {
        this.getProfile();
        this.getSupport();
      },

    }));
  });

  function sslStatusComponent() {
    return {
      status: null,
      loading: true,
      error: false,
      showDetails: false,
      icon: 'ok',
      statusColor: 'text-green-600',
      fetchStatus() {
        fetch('/api/ssl-status')
          .then(res => res.json())
          .then(data => {
            this.status = data;

            if (data.valid_till) {
              const today = new Date();
              const validTillDate = new Date(data.valid_till);
              const diffTime = validTillDate - today;
              const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));
              this.status.days_left = diffDays > 0 ? diffDays : 0;
            } else {
              this.status.days_left = null;
            }
            this.loading = false;
            const isValid = data.cert_valid && !data.cert_exp;
            if (!isValid) {
              this.icon = 'error';
              this.statusColor = 'text-red-500';
            } else if (data.days_left < 30) {
              this.icon = 'warning';
              this.statusColor = 'text-yellow-500';
            } else {
              this.icon = 'ok';
              this.statusColor = 'text-green-600';
            }
          })
          .catch(() => {
            this.loading = false;
            this.error = true;
          });
      },
    };
  }
</script>

{% block javascripts %}{% endblock %}
