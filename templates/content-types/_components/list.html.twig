<div x-data="{ isRTL: document.dir === 'rtl' }" :dir="isRTL ? 'rtl' : 'ltr'">
<div class="mt-8" x-data="itemsTable()">

    <!-- Modal -->
    <div x-show="showDeleteModal" class="fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-50"
         x-cloak aria-labelledby="modal-title" role="dialog" aria-modal="true">
        <div @click.away="showDeleteModal = false"
             class="bg-white rounded-xl overflow-hidden shadow-xl transform transition-all sm:max-w-lg sm:w-full p-6">
            <div class="sm:flex items-center justify-center">
                <div class="mt-3 text-center sm:ml-4 sm:mt-0">
                    <h3 class="text-lg leading-6 font-semibold text-slate-900 text-center" id="modal-title">
                        {{ 'Confirmer la suppression'|t }}
                    </h3>
                    <div class="mt-2">
                        <p class="text-sm text-slate-500 text-center">
                            {{ "Êtes-vous sûr de vouloir supprimer les items?"|t }}
                        </p>
                    </div>
                </div>
            </div>
            <div class="justify-center mt-5 sm:mt-4 sm:flex sm:flex-row-reverse gap-x-3">
                <button
                    :disabled="selectedItems.length == 0 && itemToDelete == null"
                    @click="deleteSelected"
                    type="button"
                    class="inline-flex w-full justify-center rounded-lg bg-red-600 px-4 py-2 text-sm font-semibold text-white shadow-sm hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-offset-2 sm:w-auto">
                    {{ 'Supprimer'|t }}
                </button>
                <button @click="showDeleteModal = false; selectedItems = []; itemToDelete = null; uncheck();" type="button"
                        class="mt-3 inline-flex w-full justify-center rounded-lg bg-white px-4 py-2 text-sm font-semibold text-slate-700 hover:bg-slate-100 border border-slate-200 shadow-sm transition-all duration-150 sm:mt-0 sm:w-auto">
                    {{ 'Annuler'|t }}
                </button>
            </div>
        </div>
    </div>

    {# Selection header #}
    <div x-show="selectedItems.length > 0" x-transition:enter="transition ease-out duration-300"
         x-transition:enter-start="opacity-0 transform -translate-y-2"
         x-transition:enter-end="opacity-100 transform translate-y-0"
         x-transition:leave="transition ease-in duration-200"
         x-transition:leave-start="opacity-100 transform translate-y-0"
         x-transition:leave-end="opacity-0 transform -translate-y-2" class="mb-6">
        <div class="bg-white px-4 py-3 sm:px-6 shadow-sm ring-1 ring-slate-200 sm:rounded-xl">
            <div class="flex items-center justify-between">
                <div class="text-sm text-slate-900">
                    <span x-text="selectedItems.length"></span>
                    {{ "élément(s) sélectionné(s)" | t }}
                </div>
                <button type="button" @click="showDeleteModal = true;"
                        class="inline-flex items-center px-3 py-2 border border-transparent text-sm font-semibold rounded-lg text-white bg-red-600 hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-offset-2">
                    {{ "Supprimer la sélection" | t }}
                </button>
            </div>
        </div>
    </div>
    <div class="bg-white shadow-sm overflow-x-auto ring-1 ring-slate-200 rounded-xl">
        {# Empty state #}
        <template x-if="!loading && data.length === 0">
            <div class="text-center py-12">
                <h3 class="mt-2 text-sm font-semibold text-slate-900">{{ "Aucune résults" | t }}</h3>
                <p class="mt-1 text-sm text-slate-500">{{ "Il n'y a pas encore de résults pour ce type." | t }}</p>
            </div>
        </template>
        <template x-if="!loading && data.length > 0">
            <table class="min-w-full divide-y divide-slate-200">
                <thead class="bg-slate-50">
                <tr>
                    <th scope="col" class="relative py-3.5 pl-4 pr-3">
                        <input type="checkbox" @click="toggleAll" id="content-type-check-toggle"
                               :checked="selectedItems.length === items.length && items.length > 0"
                               class="h-4 w-4 rounded border-slate-300 text-primary-600 focus:ring-primary-500">
                    </th>
                    <th scope="col"
                        class="py-3.5 pl-4 pr-3 text-left text-sm font-semibold text-slate-900">{{ "Label" | t }}</th>
                    <th scope="col"
                        class="py-3.5 pl-4 pr-3 text-left text-sm font-semibold text-slate-900">{{ "Status" | t }}</th>
                    <th scope="col"
                        class="py-3.5 pl-4 pr-3 text-left text-sm font-semibold text-slate-900">{{ "Language" | t }}</th>
                    <th scope="col"
                        class="py-3.5 pl-4 pr-3 text-left text-sm font-semibold text-slate-900">{{ "Date Création" | t }}</th>
                    <th scope="col" class="relative py-3.5 pl-3 pr-4 sm:pr-6">
                        <span class="sr-only">{{ "Actions" | t }}</span>
                    </th>
                </tr>
                </thead>
                <tbody class="divide-y divide-slate-100">
                <template x-for="item in data" :key="item.id">
                    <tr>
                        <td class="relative py-4 pl-4 pr-3">
                            <input type="checkbox" :value="item.id" x-model="selectedItems"
                                   class="h-4 w-4 rounded border-slate-300 text-primary-600 focus:ring-primary-500">
                        </td>
                        <td class="whitespace-nowrap py-4 pl-4 pr-3 text-sm font-semibold text-slate-900 max-w-[300px] truncate"
                            x-text="item.title"></td>
                        <td class="whitespace-nowrap py-4 pl-4 pr-3 text-sm font-semibold"
                            :class="item.status ? 'text-green-600' : 'text-red-600'"
                            x-text="item.status ? '{{ 'Published'|t }}' : '{{ 'Unpublished'|t }}'"></td>
                        <td class="whitespace-nowrap py-4 pl-4 pr-3 text-sm font-medium text-slate-900"
                            x-text="item.langague_label"></td>
                        <td class="whitespace-nowrap py-4 pl-4 pr-3 text-sm font-medium text-slate-900"
                            x-text="new Date(item.created * 1000).toLocaleString()"></td>
                        <td class="relative whitespace-nowrap py-4 pl-3 pr-4 text-right text-sm font-medium sm:pr-6">
                            <div class="flex justify-end space-x-3">
                                {% if user.hasPermission("edit own " ~ id ~ " content") or user.hasPermission("edit any " ~ id ~ " content") %}
                                    <a :href="item.edit_url" class="text-slate-400 hover:text-green-600">
                                        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none"
                                             viewbox="0 0 24 24" stroke="currentColor">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                                  d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z"/>
                                        </svg>
                                    </a>
                                {% endif %}
                                <a :href="item.alias" target="_blank" class="text-slate-400 hover:text-blue-500">
                                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none"
                                         viewbox="0 0 24 24" stroke="currentColor">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                              d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"/>
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                              d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"/>
                                    </svg>
                                </a>
                                {% if user.hasPermission("delete any " ~ id ~ " content") or user.hasPermission("delete own " ~ id ~ " content") %}
                                    <button :disabled="selectedItems.length > 0" @click="itemToDelete = item.id; showDeleteModal = true"
                                            class="text-slate-400 hover:text-red-500"
                                            :class="[
                                                'text-slate-400 hover:text-red-500',
                                                selectedItems.length > 0 ? 'cursor-not-allowed' : 'cursor-pointer'
                                            ]"                                            >
                                        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none"
                                             viewbox="0 0 24 24" stroke="currentColor">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                                  d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"></path>
                                        </svg>
                                    </button>
                                {% endif %}
                            </div>
                        </td>
                    </tr>
                </template>
                </tbody>
            </table>
        </template>
    </div>
</div>
</div>

{% block javascripts %}
    <script>
      function itemsTable() {
        return {
          selectedItems: [],
          items: [],
          showDeleteModal: false,
          itemToDelete: null,

          toggleAll() {
            if (this.selectedItems.length === this.data.length) {
              this.selectedItems = [];
            } else {
              this.selectedItems = this.data.map(item => item.id);
            }
          },
          uncheck() {
            document.getElementById("content-type-check-toggle").checked = false;
          },
        };
      }
    </script>
{% endblock %}
