{# <div class="bg-white border p-4 rounded-md space-y-4">
  <!-- Boucle sur les éléments FAQ -->
  <template x-for="(faqItem, index) in formData.fields[field_name]" :key="index">
    <div class="bg-gray-50 border rounded-md p-4 mb-4 relative space-y-3">
      <!-- Bouton de suppression -->
      <button
        type="button"
        class="absolute top-2 right-2 text-red-500 text-xl hover:text-red-700"
        @click="formData.fields[field_name].splice(index, 1)"
        title="Supprimer"
      >&times;</button>

      <!-- Question -->
      <div>
        <label class="block text-sm font-medium text-gray-700 mb-1">Question</label>
        <input
          type="text"
          x-model="formData.fields[field_name][index].question"
          placeholder="Saisir la question"
          class="w-full p-2 border border-gray-300 rounded focus:ring-2 focus:ring-primary-300"
          required
        />
      </div>

      <!-- Réponse -->
      <div>
        <label class="block text-sm font-medium text-gray-700 mb-1">Answer</label>
        <textarea
          x-model="formData.fields[field_name][index].answer"
          placeholder="Saisir la réponse"
          class="w-full p-2 border border-gray-300 rounded focus:ring-2 focus:ring-primary-300"
          rows="3"
          required
        ></textarea>
      </div>
    </div>
  </template>

  <!-- Bouton d'ajout -->
  <button
    type="button"
    class="mt-2 px-3 py-1.5 bg-primary-500 text-white rounded hover:bg-primary-600"
    @click="formData.fields[field_name].push({ question: '', answer: '' })"
  >
    + Ajouter une nouvelle FAQ
  </button>
</div>

 #}


<div class="bg-white border p-4 rounded-md space-y-4">

  <!-- Boucle sur les éléments FAQ -->
  <template x-for="(faqItem, index) in formData.fields[field.name]" :key="index">
    <div class="bg-gray-50 border rounded-md p-4 mb-4 relative space-y-3">
      <!-- Bouton de suppression -->
      <button type="button" class="absolute top-2 right-2 text-red-500 text-xl hover:text-red-700" 
              @click="formData.fields[field.name].splice(index, 1)" title="Supprimer">&times;</button>

      <!-- Question -->
      <div>
        <label class="block text-sm font-medium text-gray-700 mb-1">Question</label>
        <input type="text" x-model="formData.fields[field.name][index].question" placeholder="Saisir la question" 
               class="w-full p-2 border border-gray-300 rounded focus:ring-2 focus:ring-primary-300" required/>
      </div>

      <!-- Answer -->
      <template x-if="loaderCK">
          <div>
              <div class="col-span-full flex justify-center items-center py-12">
                  <svg class="animate-spin h-8 w-8 text-primary-500"
                        xmlns="http://www.w3.org/2000/svg"
                        fill="none" viewBox="0 0 24 24">
                      <circle class="opacity-25" cx="12"
                              cy="12" r="10"
                              stroke="currentColor"
                              stroke-width="4"></circle>
                      <path class="opacity-75"
                            fill="currentColor"
                            d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                  </svg>
                  <span class="ms-3 text-sm text-slate-600">{{ "Loading CKeditor..."|t }}</span>
              </div>
          </div>
      </template>
      <div>
        <label class="block text-sm font-medium text-gray-700 mb-1">Answer</label>
        <div :id="`faq-${index}`" x-init="getForm(`faq-${index}`, -1, false, false, false, false, formData.fields[field.name][index].answer, 'formData.fields[field.name][index].answer', true);
          (() => {
            $nextTick(() => {
              new MutationObserver((records, observer) => {
                  setTimeout(() => {
                  const textarea = $el.querySelector('textarea');
                  
                  if (!textarea) return;
                  const instanceID = textarea.getAttribute('data-ckeditor5-id');
                  let ckeditor = null;
                  Drupal.CKEditor5Instances.forEach((instance, id) => {
                      if (id === instanceID) {
                      ckeditor = instance;
                      }
                  });
                  if (ckeditor) {
                      ckeditor.model.document.on('change:data', () => {
                      formData.fields[field.name][index].answer = ckeditor.getData();
                      console.log(formData.fields[field.name][index].answer)
                      });
                  }
                  }, 1000);
              }).observe($el, { childList: true, subtree: true });
            });
          })()
        "></div>
{#         {{ drupal_form('Drupal\\vactory_dashboard\\Form\\CkeditorFieldForm', 'GENERIC', false, false, false, false, false, '', 'formData.fields[field.name][index].answer', "true") }} #}
      </div>
    </div>
  </template>

  <!-- Bouton d'ajout -->
  <button type="button" class="mt-2 px-3 py-1.5 bg-primary-500 text-white rounded hover:bg-primary-600" 
          @click="formData.fields[field.name].push({ question: '', answer: '' })">
    + Ajouter une nouvelle FAQ
  </button>
</div>
