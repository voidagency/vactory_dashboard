{# Block Form #}
<div class="hidden">
    {{ drupal_form('Drupal\\vactory_dashboard\\Form\\CkeditorFieldForm', 'GENERIC', true, 'item[fieldName]', "field.options?.['#required'] ?? false") }}
</div>
<div x-data="{ isRTL: document.dir === 'rtl' }" :dir="isRTL ? 'rtl' : 'ltr'">
    <div class="h-full flex flex-col bg-slate-50">
        <div class="sticky top-0 z-10 bg-white rounded-xl py-4 px-6 border-b border-slate-200 flex justify-between items-center mb-6">
            <div class="flex items-center gap-x-3">
                {% if not hideBlockConfig %}
                    <button @click="showBlockForm = false; blockForm = { extra_fields: {}, fields: {}, items: [], config: { title: '', show_title: false, width: 'full_width', spacing: '_none', css_classes: '' } }; selectedTemplate = null; currentBlockIndex = null; $nextTick(() => { const form = document.getElementById('block-form'); if (form) { form.reset(); const inputs = form.querySelectorAll('input, textarea, select'); inputs.forEach(input => { if (input.type === 'checkbox' || input.type === 'radio') { input.checked = false; } else { input.value = ''; } }); } })"
                            type="button"
                            class="me-3 text-slate-400 hover:text-primary-500 transition-colors">
                        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5"
                            stroke="currentColor" class="h-4 w-4">
                            <path stroke-linecap="round" stroke-linejoin="round"
                                d="M10.5 19.5 3 12m0 0 7.5-7.5M3 12h18"></path>
                        </svg>
                    </button>
                {% endif %}
                <h1 class="text-lg font-semibold text-slate-900"
                    x-text="selectedTemplate?.name || '{{ 'Add Block'|t }}'"></h1>
            </div>
            <div class="max-lg:fixed max-lg:w-full max-lg:bottom-0 max-lg:left-0 max-lg:bg-white max-lg:shadow-lg max-lg:border-t max-lg:border-slate-200 max-lg:p-3 max-lg:[&>*]:w-full max-lg:z-[1] flex items-center gap-x-2">
                {% if not hideBlockConfig %}
                    {% include '@vactory_admin/components/button/button.twig' with {
                        'variant': 'secondary',
                        'size': 'md',
                        'type': 'button',
                        'text': 'Annuler'|t,
                        'attributes': create_attribute().setAttribute('@click', 'showBlockForm = false; blockForm = { extra_fields: {}, fields: {}, items: [], config: { title: \'\', show_title: false, width: \'full_width\', spacing: \'_none\', css_classes: \'\' } }; isParagraphMultiple ? (showParagraphMultipleForm = true, currentMultipleParagraphTemplateIndex = null) : (currentBlockIndex = null); selectedTemplate = null; $nextTick(() => { const form = document.getElementById(\'block-form\'); if (form) { form.reset(); const inputs = form.querySelectorAll(\'input, textarea, select\'); inputs.forEach(input => { if (input.type === \'checkbox\' || input.type === \'radio\') { input.checked = false; } else { input.value = \'\'; } }); } })')
                    } %}
                {% endif %}
                {% include '@vactory_admin/components/button/button.twig' with {
                    'variant': 'primary',
                    'size': 'md',
                    'type': 'button',
                    'text': 'Enregistrer'|t,
                    'attributes': create_attribute().setAttribute('@click', 'saveBlock("block-form");')
                } %}
            </div>
        </div>

        <div class="flex-1 overflow-y-auto">
            <div x-data="{ collapsedView: false }" class="mx-auto">
                <form id="block-form" @submit.prevent="saveBlock('block-form')" class="bg-white rounded-xl shadow-sm p-2 lg:p-8">
                    <div class="flex items-start flex-col md:flex-row gap-6">
                        <div
                                class="{% if not hideBlockConfig %}w-full md:w-2/3{% else %}w-full{% endif %}"
                        >
                            {# Start Handling Extra Fields #}
                            <template x-if="selectedTemplate?.extra_fields">
                                <div class="mb-8 border-b border-slate-200 p-6 rounded-xl bg-slate-50">
                                    <h3 class="text-base font-semibold text-slate-900 mb-4">{{ 'General Settings'|t }}</h3>
                                    <div class="space-y-4">
                                        <template
                                                x-for="([fieldName, field], index) in Object.entries(selectedTemplate.extra_fields)"
                                                :key="fieldName">
                                            <div>

                                                {# extra fields - non group #}
                                                <template x-if="!fieldName.startsWith('group_')">
                                                    <div>
                                                        <label :class="{'required': field.options?.['#required']}"
                                                               class="block text-sm font-medium text-slate-700 mb-1">
                                                            <span x-text="field.label"></span>
                                                            <span x-show="field.options?.['#required']"
                                                                  class="text-red-500">*</span>
                                                        </label>
                                                        {# Text Input #}
                                                        <template x-if="field.type === 'text'">
                                                            <input type="text"
                                                                   :required="field.options?.['#required'] ?? false"
                                                                   x-model="blockForm.extra_fields[fieldName]"
                                                                   class="w-full py-2 px-3 text-sm border border-slate-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-300 focus:border-transparent transition-all duration-150">
                                                        </template>

                                                        {# Checkbox #}
                                                        <template x-if="field.type === 'checkbox'">
                                                            <input type="checkbox"
                                                                   :required="field.options?.['#required'] ?? false"
                                                                   x-model="blockForm.extra_fields[fieldName]">
                                                        </template>

                                                        {# Select Input #}
                                                        <template x-if="field.type === 'select'">
                                                            <select :required="field.options?.['#required'] ?? false"
                                                                    x-model="blockForm.extra_fields[fieldName]"
                                                                    class="w-full py-2 px-3 text-sm border border-slate-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-300 focus:border-transparent transition-all duration-150">
                                                                <option value="">{{ 'Select...'|t }}</option>
                                                                <template x-for="option in field.options['#options']"
                                                                          :key="Object.keys(option)[0]">
                                                                    <option :value="Object.keys(option)[0]"
                                                                            x-text="Object.values(option)[0]"></option>
                                                                </template>
                                                            </select>
                                                        </template>

                                                        {# Textarea #}
                                                        <template x-if="field.type === 'textarea'">
                                                            <textarea :required="field.options?.['#required'] ?? false"
                                                                      x-model="blockForm.extra_fields[fieldName]"
                                                                      rows="4"
                                                                      class="w-full py-2 px-3 text-sm border border-slate-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-300 focus:border-transparent transition-all duration-150"></textarea>
                                                        </template>

                                                        {# Text Format #}
                                                        <template x-if="loaderCK">
                                                            <div>
                                                                <div class="col-span-full flex justify-center items-center py-12">
                                                                    <svg class="animate-spin h-8 w-8 text-primary-500"
                                                                         xmlns="http://www.w3.org/2000/svg"
                                                                         fill="none" viewBox="0 0 24 24">
                                                                        <circle class="opacity-25" cx="12" cy="12"
                                                                                r="10" stroke="currentColor"
                                                                                stroke-width="4"></circle>
                                                                        <path class="opacity-75" fill="currentColor"
                                                                              d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                                                                    </svg>
                                                                    <span class="ms-3 text-sm text-slate-600">{{ "Loading CKeditor..."|t }}</span>
                                                                </div>
                                                            </div>
                                                        </template>
                                                        <template x-if="field.type === 'text_format'">
                                                            <div x-show="!loaderCK">
                                                                <div :id="`wysi-extra-${index}`" x-init="
                                                                    (() => {
                                                                        $nextTick(() => {
                                                                            new MutationObserver((records, observer) => {

                                                                                setTimeout(() => {

                                                                                    const textarea = $el.querySelector('textarea');
                                                                                    if (field.options?.['#required'] !== undefined) {
                                                                                        textarea.setAttribute('required', 'required');
                                                                                    }
                                                                                    const instanceID = textarea.getAttribute('data-ckeditor5-id');
                                                                                    let ckeditor = null;

                                                                                    Drupal.CKEditor5Instances.forEach(function(instance, id) {
                                                                                        if (instanceID == id) {
                                                                                            ckeditor = instance;
                                                                                        }
                                                                                    });

                                                                                    if (ckeditor) {
                                                                                        ckeditor.model.document.on('change:data', () => {
                                                                                            blockForm.extra_fields[fieldName] = ckeditor.getData();
                                                                                        });
                                                                                    }
                                                                                }, 1000);

                                                                            }).observe($el, { childList: true, subtree: true });
                                                                        });
                                                                    })()"
                                                                >
                                                                </div>
                                                            </div>
                                                        </template>

                                                        {# URL Extended Input #}
                                                        <template x-if="field.type === 'url_extended'">
                                                            {% include "@vactory_dashboard/_components/fields/link-field.html.twig" with { 'required': 'field.options?.["#required"] ?? false', xmodel: 'blockForm.extra_fields' } %} 
                                                        </template>

                                                        {# Image Input #}
                                                        <template x-if="field.type === 'image'">
                                                            {% include "@vactory_dashboard/_components/media/media-selector.html.twig" with {'required': 'field.options?.["#required"] ?? false', 'url': 'blockForm.extra_fields[fieldName].url', 'path': 'blockForm.extra_fields[fieldName].path', 'key': 'blockForm.extra_fields[fieldName].key', 'type': 'image'} %}
                                                        </template>

                                                        {# Image Input #}
                                                        <template x-if="field.type === 'file'">
                                                            {% include "@vactory_dashboard/_components/media/media-selector.html.twig" with {'required': 'field.options?.["#required"] ?? false', 'name': 'blockForm.extra_fields[fieldName].name', 'url': 'blockForm.extra_fields[fieldName].url', 'path': 'blockForm.extra_fields[fieldName].path', 'key': 'blockForm.extra_fields[fieldName].key', 'type': 'file'} %}
                                                        </template>

                                                        {# Image Input #}
                                                        <template x-if="field.type === 'remote_video'">
                                                            {% include "@vactory_dashboard/_components/media/media-selector.html.twig" with {'required': 'field.options?.["#required"] ?? false', 'name': 'blockForm.extra_fields[fieldName].name', 'url': 'blockForm.extra_fields[fieldName].url', 'path': 'blockForm.extra_fields[fieldName].path', 'key': 'blockForm.extra_fields[fieldName].key', 'type': 'remote_video'} %}
                                                        </template>

                                                        {# JSON API Collection #}
                                                        <template x-if="field.type === 'json_api_collection'">
                                                            <span>[JSON API COLLECTION] You are not allowed to modify or add new items to this field</span>
                                                        </template>

                                                        {# Webform Decoupled #}
                                                        <template x-if="field.type === 'webform_decoupled'">
                                                            <span>[WEBFORM DECOUPLED] You are not allowed to modify this field</span>
                                                        </template>
                                                    </div>
                                                </template>

                                                {# extra fields - group #}
                                                <template x-if="fieldName.startsWith('group_')">
                                                    <div>
                                                        {# Group accordion #}
                                                        <div x-data="{ openGroup: true }"
                                                             class="border border-slate-200 rounded-xl shadow bg-white p-4 space-y-6">
                                                            <div class="flex justify-between items-center cursor-pointer select-none"
                                                                 @click="openGroup = !openGroup">
                                                                <h3 x-text="field.g_title"
                                                                    class="text-lg font-semibold text-slate-900"></h3>
                                                                <svg :class="{'rotate-180': openGroup}"
                                                                     class="w-5 h-5 transform transition-transform duration-300 text-slate-400"
                                                                     fill="none"
                                                                     stroke="currentColor" viewBox="0 0 24 24">
                                                                    <path stroke-linecap="round" stroke-linejoin="round"
                                                                          stroke-width="2" d="M19 9l-7 7-7-7"/>
                                                                </svg>
                                                            </div>

                                                            {# Group fields #}
                                                            <div x-show="openGroup" x-transition class="space-y-4">
                                                                <template
                                                                        x-for="([itemName, item], index) in Object.entries(field)"
                                                                        :key="index">
                                                                    <template x-if="itemName != 'g_title'">
                                                                        <div :class="{'flex flex-row-reverse justify-end items-center gap-2': item.type === 'checkbox'}">
                                                                            <label :class="{'required': field.options?.['#required']}"
                                                                                   class="block text-sm font-medium text-slate-700 mb-1">
                                                                                <span x-text="item.label"></span>
                                                                                <span x-show="item.options?.['#required']"
                                                                                      class="text-red-500">*</span>
                                                                            </label>


                                                                            {# Text Input #}
                                                                            <template x-if="item.type === 'text'">
                                                                                <input type="text"
                                                                                       :required="item.options?.['#required'] ?? false"
                                                                                       x-model="blockForm.extra_fields[fieldName][itemName]"
                                                                                       class="w-full py-2 px-3 text-sm border border-slate-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-300 focus:border-transparent transition-all duration-150">
                                                                            </template>

                                                                            {# Text Number #}
                                                                            <template x-if="item.type === 'number'">
                                                                                <input type="number"
                                                                                       :required="item.options?.['#required'] ?? false"
                                                                                       x-model="blockForm.extra_fields[fieldName][itemName]"
                                                                                       class="w-full py-2 px-3 text-sm border border-slate-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-300 focus:border-transparent transition-all duration-150">
                                                                            </template>

                                                                            {# Checkbox #}
                                                                            <template x-if="item.type === 'checkbox'">
                                                                                <div>
                                                                                    <input type="checkbox"
                                                                                        :required="item.options?.['#required'] ?? false"
                                                                                        x-model="blockForm.extra_fields[fieldName][itemName]"
                                                                                    >
                                                                                </div>
                                                                            </template>

                                                                            {# Select Input #}
                                                                            <template x-if="item.type === 'select'">
                                                                                <select :required="item.options?.['#required'] ?? false"
                                                                                        x-model="blockForm.extra_fields[fieldName][itemName]"
                                                                                        class="w-full py-2 px-3 text-sm border border-slate-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-300 focus:border-transparent transition-all duration-150">
                                                                                    <option value="">{{ 'Select...'|t }}</option>
                                                                                    <template
                                                                                            x-for="option in item.options['#options']"
                                                                                            :key="Object.keys(option)[0]">
                                                                                        <option :value="Object.keys(option)[0]"
                                                                                                x-text="Object.values(option)[0]"></option>
                                                                                    </template>
                                                                                </select>
                                                                            </template>

                                                                            {# Textarea #}
                                                                            <template x-if="item.type === 'textarea'">
                                                                                <textarea
                                                                                        :required="item.options?.['#required'] ?? false"
                                                                                        x-model="blockForm.extra_fields[fieldName][itemName]"
                                                                                        rows="4"
                                                                                        class="w-full py-2 px-3 text-sm border border-slate-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-300 focus:border-transparent transition-all duration-150"></textarea>
                                                                            </template>

                                                                            {# Text Format #}
                                                                            <template x-if="loaderCK">
                                                                                <div>
                                                                                    <div class="col-span-full flex justify-center items-center py-12">
                                                                                        <svg class="animate-spin h-8 w-8 text-primary-500"
                                                                                             xmlns="http://www.w3.org/2000/svg"
                                                                                             fill="none"
                                                                                             viewBox="0 0 24 24">
                                                                                            <circle class="opacity-25"
                                                                                                    cx="12" cy="12"
                                                                                                    r="10"
                                                                                                    stroke="currentColor"
                                                                                                    stroke-width="4"></circle>
                                                                                            <path class="opacity-75"
                                                                                                  fill="currentColor"
                                                                                                  d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                                                                                        </svg>
                                                                                        <span class="ms-3 text-sm text-slate-600">{{ "Loading CKeditor..."|t }}</span>
                                                                                    </div>
                                                                                </div>
                                                                            </template>
                                                                            <template
                                                                                    x-if="item.type === 'text_format'">
                                                                                <div x-show="!loaderCK">
                                                                                    <span x-text=></span>
                                                                                    <div :id="`wysi-groupextra-${index}-${itemName}`"
                                                                                         x-init="
                                                                                        (() => {
                                                                                            $nextTick(() => {
                                                                                                new MutationObserver((records, observer) => {

                                                                                                    setTimeout(() => {

                                                                                                        const textarea = $el.querySelector('textarea');
                                                                                                        if (field.options?.['#required'] !== undefined) {
                                                                                                            textarea.setAttribute('required', 'required');
                                                                                                        }
                                                                                                        const instanceID = textarea.getAttribute('data-ckeditor5-id');
                                                                                                        let ckeditor = null;

                                                                                                        Drupal.CKEditor5Instances.forEach(function(instance, id) {
                                                                                                            if (instanceID == id) {
                                                                                                                ckeditor = instance;
                                                                                                            }
                                                                                                        });

                                                                                                        if (ckeditor) {
                                                                                                            ckeditor.model.document.on('change:data', () => {
                                                                                                                blockForm.extra_fields[fieldName][itemName] = ckeditor.getData();
                                                                                                            });
                                                                                                        }
                                                                                                    }, 1000);

                                                                                                }).observe($el, { childList: true, subtree: true });
                                                                                            });
                                                                                        })()"
                                                                                    >
                                                                                    </div>
                                                                                </div>
                                                                            </template>

                                                                            {# URL Extended Input #}
                                                                            <template
                                                                                    x-if="item.type === 'url_extended'">
                                                                                {% include "@vactory_dashboard/_components/fields/link-field.html.twig"  with {'required': 'item.options?.["#required"] ?? false', xmodel: 'blockForm.extra_fields[fieldName][itemName]' } %}
                                                                            </template>

                                                                            {# Image Input #}
                                                                            <template x-if="item.type === 'image'">
                                                                                <div>
                                                                                    {% include "@vactory_dashboard/_components/media/media-selector.html.twig" with {'required': 'item.options?.["#required"] ?? false', 'url': 'blockForm.extra_fields[fieldName][itemName].url', 'path': 'blockForm.extra_fields[fieldName][itemName].path', 'key': 'blockForm.extra_fields[fieldName][itemName].key', 'type': 'image'} %}
                                                                                </div>
                                                                            </template>

                                                                            {# File Input #}
                                                                            <template x-if="item.type === 'file'">
                                                                                {% include "@vactory_dashboard/_components/media/media-selector.html.twig" with {'required': 'item.options?.["#required"] ?? false', 'name': 'blockForm.extra_fields[fieldName][itemName].name', 'url': 'blockForm.extra_fields[fieldName][itemName].url', 'path': 'blockForm.extra_fields[fieldName][itemName].path', 'key': 'blockForm.extra_fields[fieldName][itemName].key', 'type': 'file'} %}
                                                                            </template>

                                                                            {# File Input #}
                                                                            <template
                                                                                    x-if="item.type === 'remote_video'">
                                                                                {% include "@vactory_dashboard/_components/media/media-selector.html.twig" with {'required': 'item.options?.["#required"] ?? false', 'name': 'blockForm.extra_fields[fieldName][itemName].name', 'url': 'blockForm.extra_fields[fieldName][itemName].url', 'path': 'blockForm.extra_fields[fieldName][itemName].path', 'key': 'blockForm.extra_fields[fieldName][itemName].key', 'type': 'remote_video'} %}
                                                                            </template>

                                                                            {# JSON API Collection #}
                                                                            <template
                                                                                    x-if="item.type === 'json_api_collection'">
                                                                                <span>[JSON API COLLECTION] You are not allowed to modify or add new items to this field</span>
                                                                            </template>

                                                                            {# Webform Decoupled #}
                                                                            <template
                                                                                    x-if="item.type === 'webform_decoupled'">
                                                                                <span>[WEBFORM DECOUPLED] You are not allowed to modify this field</span>
                                                                            </template>
                                                                        </div>
                                                                    </template>
                                                                </template>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </template>
                                            </div>
                                        </template>
                                    </div>
                                </div>
                            </template>
                            {# End Handling Extra Fields #}
                            {# Main Fields Section #}
                            <div>
                                <div x-show="selectedTemplate?.fields">
                                    {# Start handling single Item Fields #}
                                    <template x-if="!selectedTemplate?.multiple">
                                        <div class="flex flex-col gap-6 bg-slate-50 p-4 rounded-xl">
                                            <template
                                                    x-for="([fieldName, field], index) in Object.entries(selectedTemplate.fields)"
                                                    :key="fieldName">
                                                <template x-if="!fieldName.startsWith('group_')">
                                                    <div>
                                                        <label :class="{'required': field.options?.['#required']}"
                                                               class="block text-sm font-medium text-slate-700 mb-1">
                                                            <span x-text="field.label"></span>
                                                            <span x-show="field.options?.['#required']"
                                                                  class="text-red-500">*</span>
                                                        </label>

                                                        {# Text Input #}
                                                        <template x-if="field.type === 'text'">
                                                            <input type="text"
                                                                   :required="field.options?.['#required'] ?? false"
                                                                   x-model="blockForm.fields[fieldName]"
                                                                   class="w-full py-2 px-3 text-sm border border-slate-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-300 focus:border-transparent transition-all duration-150">
                                                        </template>

                                                        {# Checkbox #}
                                                        <template x-if="field.type === 'checkbox'">
                                                            <input type="checkbox"
                                                                   :required="field.options?.['#required'] ?? false"
                                                                   x-model="blockForm.fields[fieldName]">
                                                        </template>

                                                        {# Select Input #}
                                                        <template x-if="field.type === 'select'">
                                                            <select :required="field.options?.['#required'] ?? false"
                                                                    x-model="blockForm.fields[fieldName]"
                                                                    class="w-full py-2 px-3 text-sm border border-slate-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-300 focus:border-transparent transition-all duration-150">
                                                                <option value="">{{ 'Select...'|t }}</option>
                                                                <template x-for="option in field.options['#options']"
                                                                          :key="Object.keys(option)[0]">
                                                                    <option :value="Object.keys(option)[0]"
                                                                            x-text="Object.values(option)[0]"></option>
                                                                </template>
                                                            </select>
                                                        </template>

                                                        {# Textarea #}
                                                        <template x-if="field.type === 'textarea'">
                                                        <textarea :required="field.options?.['#required'] ?? false"
                                                                  x-model="blockForm.fields[fieldName]" rows="4"
                                                                  class="w-full py-2 px-3 text-sm border border-slate-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-300 focus:border-transparent transition-all duration-150"></textarea>
                                                        </template>

                                                        {# Text Format #}
                                                        <template x-if="loaderCK">
                                                            <div>
                                                                <div class="col-span-full flex justify-center items-center py-12">
                                                                    <svg class="animate-spin h-8 w-8 text-primary-500"
                                                                         xmlns="http://www.w3.org/2000/svg"
                                                                         fill="none" viewBox="0 0 24 24">
                                                                        <circle class="opacity-25" cx="12" cy="12"
                                                                                r="10" stroke="currentColor"
                                                                                stroke-width="4"></circle>
                                                                        <path class="opacity-75" fill="currentColor"
                                                                              d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                                                                    </svg>
                                                                    <span class="ms-3 text-sm text-slate-600">{{ "Loading CKeditor..."|t }}</span>
                                                                </div>
                                                            </div>
                                                        </template>
                                                        <template x-if="field.type === 'text_format'">
                                                            <div x-show="!loaderCK">
                                                                <div :id="`wysi-single-${index}`"
                                                                     x-init="
                                                                (() => {
                                                                    $nextTick(() => {
                                                                        new MutationObserver((records, observer) => {

                                                                            setTimeout(() => {

                                                                                const textarea = $el.querySelector('textarea');
                                                                                if (field.options?.['#required'] !== undefined) {
                                                                                    textarea.setAttribute('required', 'required');
                                                                                }
                                                                                const instanceID = textarea.getAttribute('data-ckeditor5-id');
                                                                                let ckeditor = null;

                                                                                Drupal.CKEditor5Instances.forEach(function(instance, id) {
                                                                                    if (instanceID == id) {
                                                                                        ckeditor = instance;
                                                                                    }
                                                                                });

                                                                                if (ckeditor) {
                                                                                    ckeditor.model.document.on('change:data', () => {
                                                                                        blockForm.fields[fieldName] = ckeditor.getData();
                                                                                    });
                                                                                }
                                                                            }, 1000);

                                                                        }).observe($el, { childList: true, subtree: true });
                                                                    });
                                                                })()"
                                                                >
                                                                </div>
                                                            </div>
                                                        </template>

                                                        {# URL Extended Input #}
                                                        <template x-if="field.type === 'url_extended'">
                                                            {% include "@vactory_dashboard/_components/fields/link-field.html.twig"  with { 'required': 'field.options?.["#required"] ?? false', xmodel: 'blockForm.fields' } %}
                                                        </template>

                                                        {# Image Input #}
                                                        <template x-if="field.type === 'image'">
                                                            {% include "@vactory_dashboard/_components/media/media-selector.html.twig" with {'required': 'field.options?.["#required"] ?? false', 'url': 'blockForm.fields[fieldName].url', 'path': 'blockForm.fields[fieldName].path', 'key': 'blockForm.fields[fieldName].key', 'type': 'image'} %}
                                                        </template>

                                                        {# File Input #}
                                                        <template x-if="field.type === 'file'">
                                                            {% include "@vactory_dashboard/_components/media/media-selector.html.twig" with {'required': 'field.options?.["#required"] ?? false', 'name': 'blockForm.fields[fieldName].name', 'url': 'blockForm.fields[fieldName].url', 'path': 'blockForm.fields[fieldName].path', 'key': 'blockForm.fields[fieldName].key', 'type': 'file'} %}
                                                        </template>

                                                        {# File Input #}
                                                        <template x-if="field.type === 'remote_video'">
                                                            {% include "@vactory_dashboard/_components/media/media-selector.html.twig" with {'required': 'field.options?.["#required"] ?? false', 'name': 'blockForm.fields[fieldName].name', 'url': 'blockForm.fields[fieldName].url', 'path': 'blockForm.fields[fieldName].path', 'key': 'blockForm.fields[fieldName].key', 'type': 'remote_video'} %}
                                                        </template>

                                                        {# JSON API Collection #}
                                                        <template x-if="field.type === 'json_api_collection'">
                                                            <span>[JSON API COLLECTION] You are not allowed to modify or add new items to this field</span>
                                                        </template>

                                                        {# Webform Decoupled #}
                                                        <template x-if="field.type === 'webform_decoupled'">
                                                            <span>[WEBFORM DECOUPLED] You are not allowed to modify this field</span>
                                                        </template>
                                                    </div>
                                                </template>
                                            </template>
                                            {# Start handle group fields #}
                                            <template
                                                    x-for="([fieldName, field], index) in Object.entries(selectedTemplate.fields)"
                                                    :key="fieldName">
                                                <template x-if="fieldName.startsWith('group_')">
                                                    <div>
                                                        {# Group accordion #}
                                                        <div x-data="{ openGroup: true }"
                                                             class="border border-slate-200 rounded-xl shadow bg-white p-4 space-y-6">
                                                            <div class="flex justify-between items-center cursor-pointer select-none"
                                                                 @click="openGroup = !openGroup">
                                                                <h3 x-text="field.g_title"
                                                                    class="text-lg font-semibold text-slate-900"></h3>
                                                                <svg :class="{'rotate-180': openGroup}"
                                                                     class="w-5 h-5 transform transition-transform duration-300 text-slate-400"
                                                                     fill="none"
                                                                     stroke="currentColor" viewBox="0 0 24 24">
                                                                    <path stroke-linecap="round" stroke-linejoin="round"
                                                                          stroke-width="2" d="M19 9l-7 7-7-7"/>
                                                                </svg>
                                                            </div>

                                                            {# Group fields #}
                                                            <div x-show="openGroup" x-transition class="space-y-4">
                                                                <template
                                                                        x-for="([itemName, item], index) in Object.entries(field)"
                                                                        :key="index">
                                                                    <template x-if="itemName != 'g_title'">
                                                                        <div>
                                                                            <label :class="{'required': field.options?.['#required']}"
                                                                                   class="block text-sm font-medium text-slate-700 mb-1">
                                                                                <span x-text="item.label"></span>
                                                                                <span x-show="item.options?.['#required']"
                                                                                      class="text-red-500">*</span>
                                                                            </label>


                                                                            {# Text Input #}
                                                                            <template x-if="item.type === 'text'">
                                                                                <input type="text"
                                                                                       :required="item.options?.['#required'] ?? false"
                                                                                       x-model="blockForm.fields[fieldName][itemName]"
                                                                                       class="w-full py-2 px-3 text-sm border border-slate-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-300 focus:border-transparent transition-all duration-150">
                                                                            </template>

                                                                            {# Checkbox #}
                                                                            <template x-if="item.type === 'checkbox'">
                                                                                <input type="checkbox"
                                                                                       :required="item.options?.['#required'] ?? false"
                                                                                       x-model="blockForm.fields[fieldName][itemName]"
                                                                                >
                                                                            </template>

                                                                            {# Select Input #}
                                                                            <template x-if="item.type === 'select'">
                                                                                <select :required="item.options?.['#required'] ?? false"
                                                                                        x-model="blockForm.fields[fieldName][itemName]"
                                                                                        class="w-full py-2 px-3 text-sm border border-slate-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-300 focus:border-transparent transition-all duration-150">
                                                                                    <option value="">{{ 'Select...'|t }}</option>
                                                                                    <template
                                                                                            x-for="option in item.options['#options']"
                                                                                            :key="Object.keys(option)[0]">
                                                                                        <option :value="Object.keys(option)[0]"
                                                                                                x-text="Object.values(option)[0]"></option>
                                                                                    </template>
                                                                                </select>
                                                                            </template>

                                                                            {# Textarea #}
                                                                            <template x-if="item.type === 'textarea'">
                                                                            <textarea
                                                                                    :required="item.options?.['#required'] ?? false"
                                                                                    x-model="blockForm.fields[fieldName][itemName]"
                                                                                    rows="4"
                                                                                    class="w-full py-2 px-3 text-sm border border-slate-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-300 focus:border-transparent transition-all duration-150"></textarea>
                                                                            </template>

                                                                            {# Text Format #}
                                                                            <template x-if="loaderCK">
                                                                                <div>
                                                                                    <div class="col-span-full flex justify-center items-center py-12">
                                                                                        <svg class="animate-spin h-8 w-8 text-primary-500"
                                                                                             xmlns="http://www.w3.org/2000/svg"
                                                                                             fill="none"
                                                                                             viewBox="0 0 24 24">
                                                                                            <circle class="opacity-25"
                                                                                                    cx="12" cy="12"
                                                                                                    r="10"
                                                                                                    stroke="currentColor"
                                                                                                    stroke-width="4"></circle>
                                                                                            <path class="opacity-75"
                                                                                                  fill="currentColor"
                                                                                                  d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                                                                                        </svg>
                                                                                        <span class="ms-3 text-sm text-slate-600">{{ "Loading CKeditor..."|t }}</span>
                                                                                    </div>
                                                                                </div>
                                                                            </template>
                                                                            <template
                                                                                    x-if="item.type === 'text_format'">
                                                                                <div x-show="!loaderCK">
                                                                                    <div :id="`wysi-group-${index}-${item.label.toLowerCase()}`"
                                                                                         x-init="
                                                                                    (() => {
                                                                                        $nextTick(() => {
                                                                                            new MutationObserver((records, observer) => {

                                                                                                setTimeout(() => {

                                                                                                    const textarea = $el.querySelector('textarea');
                                                                                                    if (field.options?.['#required'] !== undefined) {
                                                                                                        textarea.setAttribute('required', 'required');
                                                                                                    }
                                                                                                    const instanceID = textarea.getAttribute('data-ckeditor5-id');
                                                                                                    let ckeditor = null;

                                                                                                    Drupal.CKEditor5Instances.forEach(function(instance, id) {
                                                                                                        if (instanceID == id) {
                                                                                                            ckeditor = instance;
                                                                                                        }
                                                                                                    });

                                                                                                    if (ckeditor) {
                                                                                                        ckeditor.model.document.on('change:data', () => {
                                                                                                            blockForm.fields[fieldName][itemName] = ckeditor.getData();
                                                                                                        });
                                                                                                    }
                                                                                                }, 1000);

                                                                                            }).observe($el, { childList: true, subtree: true });
                                                                                        });
                                                                                    })()"
                                                                                    >
                                                                                    </div>
                                                                                </div>
                                                                            </template>

                                                                            {# URL Extended Input #}
                                                                            <template
                                                                                    x-if="item.type === 'url_extended'">
                                                                                {% include "@vactory_dashboard/_components/fields/link-field.html.twig"  with { 'required': 'item.options?.["#required"] ?? false', xmodel: 'blockForm.fields[fieldName][itemName]' } %}
                                                                            </template>

                                                                            {# Image Input #}
                                                                            <template x-if="item.type === 'image'">
                                                                                <div>
                                                                                    {% include "@vactory_dashboard/_components/media/media-selector.html.twig" with {'required': 'item.options?.["#required"] ?? false', 'url': 'blockForm.fields[fieldName][itemName].url', 'path': 'blockForm.fields[fieldName][itemName].path', 'key': 'blockForm.fields[fieldName][itemName].key', 'type': 'image'} %}
                                                                                </div>
                                                                            </template>

                                                                            {# File Input #}
                                                                            <template x-if="item.type === 'file'">
                                                                                {% include "@vactory_dashboard/_components/media/media-selector.html.twig" with {'required': 'item.options?.["#required"] ?? false', 'name': 'blockForm.fields[fieldName][itemName].name', 'url': 'blockForm.fields[fieldName][itemName].url', 'path': 'blockForm.fields[fieldName][itemName].path', 'key': 'blockForm.fields[fieldName][itemName].key', 'type': 'file'} %}
                                                                            </template>

                                                                            {# File Input #}
                                                                            <template
                                                                                    x-if="item.type === 'remote_video'">
                                                                                {% include "@vactory_dashboard/_components/media/media-selector.html.twig" with {'required': 'item.options?.["#required"] ?? false', 'name': 'blockForm.fields[fieldName][itemName].name', 'url': 'blockForm.fields[fieldName][itemName].url', 'path': 'blockForm.fields[fieldName][itemName].path', 'key': 'blockForm.fields[fieldName][itemName].key', 'type': 'remote_video'} %}
                                                                            </template>

                                                                            {# JSON API Collection #}
                                                                            <template
                                                                                    x-if="item.type === 'json_api_collection'">
                                                                                <span>[JSON API COLLECTION] You are not allowed to modify or add new items to this field</span>
                                                                            </template>

                                                                            {# Webform Decoupled #}
                                                                            <template
                                                                                    x-if="item.type === 'webform_decoupled'">
                                                                                <span>[WEBFORM DECOUPLED] You are not allowed to modify this field</span>
                                                                            </template>
                                                                        </div>
                                                                    </template>
                                                                </template>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </template>
                                            </template>
                                            {# End handle group fields #}
                                        </div>
                                    </template>
                                    {# End handling single Item Fields #}

                                    {# Start multiple Items Fields #}
                                    <template x-if="selectedTemplate?.multiple">
                                        <div>
                                            <template x-if="selectedTemplate?.multiple">
                                                <div class="flex justify-between items-center mb-6">
                                                    <span class="flex items-center text-sm font-medium text-slate-700">
                                                        View Mode
                                                        <span class="ml-1 flex justify-end text-xs font-medium text-primary-400">
                                                            (
                                                                <span class="inline-block mr-1"
                                                                      x-text="blockForm.items.length"></span>
                                                                <span x-show="blockForm.items.length == 1"
                                                                      class="inline-block">élément disponible</span>
                                                                <span x-show="blockForm.items.length > 1"
                                                                      class="inline-block">éléments disponibles</span>
                                                            )
                                                        </span>
                                                    </span>
                                                    {% include '@vactory_admin/components/button/button.twig' with {
                                                        'variant': 'secondary',
                                                        'size': 'sm',
                                                        'text': 'Toggle View'|t,
                                                        'attributes': create_attribute()
                                                            .setAttribute('@click', 'collapsedView = !collapsedView')
                                                            .setAttribute('type', 'button')
                                                    } %}
                                                </div>
                                            </template>
                                            <div x-show="!collapsedView" class="space-y-4">
                                                <template x-for="(item, index) in blockForm.items" :key="index">
                                                    <div :class="item._isNewItem ? 'bg-slate-200' : 'bg-slate-50'"
                                                         class="p-4 rounded-xl relative transition-colors duration-300"
                                                         draggable="true"
                                                         :data-index="index" :data-item-index="index"
                                                         @dragstart="dragStartItem($event)"
                                                         @dragover.prevent="$event.target.closest('[draggable]').classList.add('bg-slate-100')"
                                                         @dragleave.prevent="$event.target.closest('[draggable]').classList.remove('bg-slate-100')"
                                                         @drop.prevent="dragEndItem($event)"
                                                         @dragend="$event.target.closest('[draggable]').classList.remove('bg-slate-100')">
                                                        <div class="absolute top-2 end-2 flex items-center gap-x-2">
                                                            <button type="button"
                                                                    class="cursor-move text-slate-400 hover:text-primary-500">
                                                                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5"
                                                                     fill="none" viewbox="0 0 24 24"
                                                                     stroke="currentColor">
                                                                    <path stroke-linecap="round" stroke-linejoin="round"
                                                                          stroke-width="2" d="M4 8h16M4 16h16"></path>
                                                                </svg>
                                                            </button>
                                                            <button type="button" x-show="blockForm.items.length > 1"
                                                                    @click="removeItem(index)"
                                                                    class="text-slate-400 hover:text-red-500">
                                                                <svg class="h-5 w-5" xmlns="http://www.w3.org/2000/svg"
                                                                     fill="none" viewbox="0 0 24 24"
                                                                     stroke="currentColor">
                                                                    <path stroke-linecap="round" stroke-linejoin="round"
                                                                          stroke-width="2" d="M6 18L18 6M6 6l12 12"/>
                                                                </svg>
                                                            </button>
                                                        </div>
                                                        <div class="space-y-4 mt-6">
                                                            {# START - multiple group #}
                                                            <template
                                                                    x-for="([fieldName, field_], index) in Object.entries(selectedTemplate.fields)"
                                                                    :key="fieldName">
                                                                <template x-if="fieldName.startsWith('group_')">
                                                                    {# Group accordion #}
                                                                    <div x-data="{ openGroup: true }"
                                                                         class="border border-slate-200 rounded-xl shadow bg-white p-4 space-y-6">
                                                                        <div class="flex justify-between items-center cursor-pointer select-none"
                                                                             @click="openGroup = !openGroup">
                                                                            <h3 x-text="field_.g_title"
                                                                                class="text-lg font-semibold text-slate-900"></h3>
                                                                            <svg :class="{'rotate-180': openGroup}"
                                                                                 class="w-5 h-5 transform transition-transform duration-300 text-slate-400"
                                                                                 fill="none"
                                                                                 stroke="currentColor"
                                                                                 viewBox="0 0 24 24">
                                                                                <path stroke-linecap="round"
                                                                                      stroke-linejoin="round"
                                                                                      stroke-width="2"
                                                                                      d="M19 9l-7 7-7-7"/>
                                                                            </svg>
                                                                        </div>

                                                                        {# Group fields #}
                                                                        <div x-show="openGroup" x-transition
                                                                             class="space-y-4">
                                                                            <template
                                                                                    x-for="([itemName, field], index) in Object.entries(field_)"
                                                                                    :key="index">
                                                                                <template x-if="itemName != 'g_title'">
                                                                                    <div>
                                                                                        <label :class="{'required': field.options?.['#required']}"
                                                                                               class="block text-sm font-medium text-slate-700 mb-1">
                                                                                            <span x-text="field.label"></span>
                                                                                            <span x-show="field.options?.['#required']"
                                                                                                  class="text-red-500">*</span>
                                                                                        </label>

                                                                                        {# Text Input #}
                                                                                        <template
                                                                                                x-if="field.type === 'text'">
                                                                                            <input type="text"
                                                                                                   :required="field.options?.['#required'] ?? false"
                                                                                                   x-model="item[fieldName][itemName]"
                                                                                                   class="w-full py-2 px-3 text-sm border border-slate-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-300 focus:border-transparent bg-white transition-all duration-150">
                                                                                        </template>

                                                                                        {# Checkbox #}
                                                                                        <template
                                                                                                x-if="field.type === 'checkbox'">
                                                                                            <input type="checkbox"
                                                                                                   :required="field.options?.['#required'] ?? false"
                                                                                                   x-model="item[fieldName][itemName]">
                                                                                        </template>


                                                                                        {# Textarea #}
                                                                                        <template
                                                                                                x-if="field.type === 'textarea'">
                                                                                            <textarea
                                                                                                    :required="field.options?.['#required'] ?? false"
                                                                                                    x-model="item[fieldName][itemName]"
                                                                                                    rows="4"
                                                                                                    class="w-full py-2 px-3 text-sm border border-slate-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-300 focus:border-transparent bg-white transition-all duration-150"></textarea>
                                                                                        </template>

                                                                                        {# Text Format #}
                                                                                        <template x-if="loaderCK">
                                                                                            <div>
                                                                                                <div class="col-span-full flex justify-center items-center py-12">
                                                                                                    <svg class="animate-spin h-8 w-8 text-primary-500"
                                                                                                         xmlns="http://www.w3.org/2000/svg"
                                                                                                         fill="none"
                                                                                                         viewBox="0 0 24 24">
                                                                                                        <circle class="opacity-25"
                                                                                                                cx="12"
                                                                                                                cy="12"
                                                                                                                r="10"
                                                                                                                stroke="currentColor"
                                                                                                                stroke-width="4"></circle>
                                                                                                        <path class="opacity-75"
                                                                                                              fill="currentColor"
                                                                                                              d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                                                                                                    </svg>
                                                                                                    <span class="ms-3 text-sm text-slate-600">{{ "Loading CKeditor..."|t }}</span>
                                                                                                </div>
                                                                                            </div>
                                                                                        </template>
                                                                                        <template
                                                                                                x-if="field.type === 'text_format'">
                                                                                            <div x-show="!loaderCK">
                                                                                                <div class="wysiwyg-group-container"
                                                                                                     x-init="
                                                                                                    (() => {
                                                                                                        $nextTick(() => {
                                                                                                        new MutationObserver((records, observer) => {
                                                                                                            setTimeout(() => {
                                                                                                            const textarea = $el.querySelector('textarea');
                                                                                                            if (field.options?.['#required'] !== undefined) {
                                                                                                                textarea.setAttribute('required', 'required');
                                                                                                            }
                                                                                                            if (!textarea) return;
                                                                                                            const instanceID = textarea.getAttribute('data-ckeditor5-id');
                                                                                                            let ckeditor = null;
                                                                                                            Drupal.CKEditor5Instances.forEach((instance, id) => {
                                                                                                                if (id === instanceID) {
                                                                                                                ckeditor = instance;
                                                                                                                }
                                                                                                            });
                                                                                                            if (ckeditor) {
                                                                                                                ckeditor.model.document.on('change:data', () => {
                                                                                                                item[fieldName][itemName] = ckeditor.getData();
                                                                                                                });
                                                                                                            }
                                                                                                            }, 1000);
                                                                                                        }).observe($el, { childList: true, subtree: true });
                                                                                                        });
                                                                                                    })()
                                                                                                ">
                                                                                                </div>
                                                                                            </div>
                                                                                        </template>

                                                                                        {# Select Input #}
                                                                                        <template
                                                                                                x-if="field.type === 'select'">
                                                                                            <select :required="field.options?.['#required'] ?? false"
                                                                                                    x-model="item[fieldName][itemName]"
                                                                                                    class="w-full py-2 px-3 text-sm border border-slate-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-300 focus:border-transparent bg-white transition-all duration-150">
                                                                                                <option value="">{{ 'Select...'|t }}</option>
                                                                                                <template
                                                                                                        x-for="option in field.options['#options']"
                                                                                                        :key="Object.keys(option)[0]">
                                                                                                    <option :value="Object.keys(option)[0]"
                                                                                                            x-text="Object.values(option)[0]"></option>
                                                                                                </template>
                                                                                            </select>
                                                                                        </template>

                                                                                        {# URL Extended Input #}
                                                                                        <template
                                                                                                x-if="field.type === 'url_extended'">
                                                                                            {% include "@vactory_dashboard/_components/fields/link-field.html.twig" with {'required': 'field.options?.["#required"] ?? false',  xmodel: 'item' } %}
                                                                                        </template>


                                                                                        {# Image Input #}
                                                                                        <template
                                                                                                x-if="field.type === 'image'">
                                                                                            <div>
                                                                                                {% include "@vactory_dashboard/_components/media/media-selector.html.twig" with {'required': 'field.options?.["#required"] ?? false', 'url': 'item[fieldName][itemName].url', 'path': 'item[fieldName][itemName].path', 'key': 'item[fieldName][itemName].key', 'type': 'image'} %}
                                                                                            </div>
                                                                                        </template>

                                                                                        {# File Input #}
                                                                                        <template
                                                                                                x-if="field.type === 'file'">
                                                                                            {% include "@vactory_dashboard/_components/media/media-selector.html.twig" with {'required': 'field.options?.["#required"] ?? false', 'name': 'item[fieldName][itemName].name', 'url': 'item[fieldName][itemName].url', 'path': 'item[fieldName][itemName].path', 'key': 'item[fieldName][itemName].key', 'type': 'file'} %}
                                                                                        </template>

                                                                                        {# File Input #}
                                                                                        <template
                                                                                                x-if="field.type === 'remote_video'">
                                                                                            {% include "@vactory_dashboard/_components/media/media-selector.html.twig" with {'required': 'field.options?.["#required"] ?? false', 'name': 'item[fieldName][itemName].name', 'url': 'item[fieldName][itemName].url', 'path': 'item[fieldName][itemName].path', 'key': 'item[fieldName][itemName].key', 'type': 'remote_video'} %}
                                                                                        </template>

                                                                                        {# JSON API Collection #}
                                                                                        <template
                                                                                                x-if="field.type === 'json_api_collection'">
                                                                                            <span>[JSON API COLLECTION] You are not allowed to modify or add new items to this field</span>
                                                                                        </template>

                                                                                        {# Webform Decoupled #}
                                                                                        <template
                                                                                                x-if="field.type === 'webform_decoupled'">
                                                                                            <span>[WEBFORM DECOUPLED] You are not allowed to modify this field</span>
                                                                                        </template>
                                                                                    </div>
                                                                                </template>
                                                                            </template>
                                                                        </div>
                                                                    </div>
                                                                </template>
                                                            </template>
                                                            {# END - multiple group #}

                                                            {# START - multiple #}
                                                            <template
                                                                    x-for="(field, fieldName) in selectedTemplate.fields"
                                                                    :key="fieldName">
                                                                <div>
                                                                    <label :class="{'required': field.options?.['#required']}"
                                                                           class="block text-sm font-medium text-slate-700 mb-1">
                                                                        <span x-text="field.label"></span>
                                                                        <span x-show="field.options?.['#required']"
                                                                              class="text-red-500">*</span>
                                                                    </label>

                                                                    {# Text Input #}
                                                                    <template x-if="field.type === 'text'">
                                                                        <input type="text"
                                                                               :required="field.options?.['#required'] ?? false"
                                                                               x-model="item[fieldName]"
                                                                               class="w-full py-2 px-3 text-sm border border-slate-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-300 focus:border-transparent bg-white transition-all duration-150">
                                                                    </template>

                                                                    {# Checkbox #}
                                                                    <template x-if="field.type === 'checkbox'">
                                                                        <input type="checkbox"
                                                                               :required="field.options?.['#required'] ?? false"
                                                                               x-model="item[fieldName]">
                                                                    </template>


                                                                    {# Textarea #}
                                                                    <template x-if="field.type === 'textarea'">
                                                                        <textarea
                                                                                :required="field.options?.['#required'] ?? false"
                                                                                x-model="item[fieldName]" rows="4"
                                                                                class="w-full py-2 px-3 text-sm border border-slate-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-300 focus:border-transparent bg-white transition-all duration-150"></textarea>
                                                                    </template>

                                                                    {# Text Format #}
                                                                    <template x-if="loaderCK">
                                                                        <div>
                                                                            <div class="col-span-full flex justify-center items-center py-12">
                                                                                <svg class="animate-spin h-8 w-8 text-primary-500"
                                                                                     xmlns="http://www.w3.org/2000/svg"
                                                                                     fill="none" viewBox="0 0 24 24">
                                                                                    <circle class="opacity-25" cx="12"
                                                                                            cy="12" r="10"
                                                                                            stroke="currentColor"
                                                                                            stroke-width="4"></circle>
                                                                                    <path class="opacity-75"
                                                                                          fill="currentColor"
                                                                                          d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                                                                                </svg>
                                                                                <span class="ms-3 text-sm text-slate-600">{{ "Loading CKeditor..."|t }}</span>
                                                                            </div>
                                                                        </div>
                                                                    </template>
                                                                    <template x-if="field.type === 'text_format'">
                                                                        <div x-show="!loaderCK">
                                                                            <div class="wysiwyg-container" x-init="
                                                                                (() => {
                                                                                    $nextTick(() => {
                                                                                    new MutationObserver((records, observer) => {
                                                                                        setTimeout(() => {
                                                                                        const textarea = $el.querySelector('textarea');
                                                                                        if (field.options?.['#required'] !== undefined) {
                                                                                            textarea.setAttribute('required', 'required');
                                                                                        }
                                                                                        if (!textarea) return;
                                                                                        const instanceID = textarea.getAttribute('data-ckeditor5-id');
                                                                                        let ckeditor = null;
                                                                                        Drupal.CKEditor5Instances.forEach((instance, id) => {
                                                                                            if (id === instanceID) {
                                                                                            ckeditor = instance;
                                                                                            }
                                                                                        });
                                                                                        if (ckeditor) {
                                                                                            ckeditor.model.document.on('change:data', () => {
                                                                                            item[fieldName] = ckeditor.getData();
                                                                                            });
                                                                                        }
                                                                                        }, 1000);
                                                                                    }).observe($el, { childList: true, subtree: true });
                                                                                    });
                                                                                })()
                                                                            ">
                                                                            </div>
                                                                        </div>
                                                                    </template>

                                                                    {# Select Input #}
                                                                    <template x-if="field.type === 'select'">
                                                                        <select :required="field.options?.['#required'] ?? false"
                                                                                x-model="item[fieldName]"
                                                                                class="w-full py-2 px-3 text-sm border border-slate-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-300 focus:border-transparent bg-white transition-all duration-150">
                                                                            <option value="">{{ 'Select...'|t }}</option>
                                                                            <template
                                                                                    x-for="option in field.options['#options']"
                                                                                    :key="Object.keys(option)[0]">
                                                                                <option :value="Object.keys(option)[0]"
                                                                                        x-text="Object.values(option)[0]"></option>
                                                                            </template>
                                                                        </select>
                                                                    </template>

                                                                    {# URL Extended Input #}
                                                                    <template x-if="field.type === 'url_extended'">
                                                                        {% include "@vactory_dashboard/_components/fields/link-field.html.twig" with { 'required': 'field.options?.["#required"] ?? false', xmodel: 'item' } %}
                                                                    </template>


                                                                    {# Image Input #}
                                                                    <template x-if="field.type === 'image'">
                                                                        <div>
                                                                            {% include "@vactory_dashboard/_components/media/media-selector.html.twig" with {'required': 'field.options?.["#required"] ?? false', 'url': 'item[fieldName].url', 'path': 'item[fieldName].path', 'key': 'item[fieldName].key', 'type': 'image'} %}
                                                                        </div>
                                                                    </template>

                                                                    {# File Input #}
                                                                    <template x-if="field.type === 'file'">
                                                                        {% include "@vactory_dashboard/_components/media/media-selector.html.twig" with {'required': 'field.options?.["#required"] ?? false', 'name': 'item[fieldName].name', 'url': 'item[fieldName].url', 'path': 'item[fieldName].path', 'key': 'item[fieldName].key', 'type': 'file'} %}
                                                                    </template>

                                                                    {# File Input #}
                                                                    <template x-if="field.type === 'remote_video'">
                                                                        {% include "@vactory_dashboard/_components/media/media-selector.html.twig" with {'required': 'field.options?.["#required"] ?? false', 'name': 'item[fieldName].name', 'url': 'item[fieldName].url', 'path': 'item[fieldName].path', 'key': 'item[fieldName].key', 'type': 'remote_video'} %}
                                                                    </template>

                                                                    {# JSON API Collection #}
                                                                    <template
                                                                            x-if="field.type === 'json_api_collection'">
                                                                        <span>[JSON API COLLECTION] You are not allowed to modify or add new items to this field</span>
                                                                    </template>

                                                                    {# Webform Decoupled #}
                                                                    <template x-if="field.type === 'webform_decoupled'">
                                                                        <span>[WEBFORM DECOUPLED] You are not allowed to modify this field</span>
                                                                    </template>
                                                                </div>
                                                            </template>
                                                            {# END - multiple #}

                                                        </div>
                                                    </div>
                                                </template>
                                            </div>
                                            <div x-show="collapsedView" class="space-y-4">
                                                <template x-for="(item, index) in blockForm.items" :key="index">
                                                    <div :class="item._isNewItem ? 'bg-slate-200' : 'bg-slate-50'"
                                                         class="p-4 rounded-xl relative transition-colors duration-300"
                                                         draggable="true"
                                                         :data-index="index" :data-item-index="index"
                                                         @dragstart="dragStartItem($event)"
                                                         @dragover.prevent="$event.target.closest('[draggable]').classList.add('bg-slate-100')"
                                                         @dragleave.prevent="$event.target.closest('[draggable]').classList.remove('bg-slate-100')"
                                                         @drop.prevent="dragEndItem($event)"
                                                         @dragend="$event.target.closest('[draggable]').classList.remove('bg-slate-100')">
                                                        <div class="flex justify-between items-center">
                                                            <span class="text-lg font-medium text-slate-900"
                                                                  x-text="'Item ' + (index + 1)"></span>
                                                            <div class="flex items-center gap-x-2">
                                                                <button type="button"
                                                                        class="cursor-move text-slate-400 hover:text-primary-500">
                                                                    <svg xmlns="http://www.w3.org/2000/svg"
                                                                         class="h-5 w-5"
                                                                         fill="none" viewbox="0 0 24 24"
                                                                         stroke="currentColor">
                                                                        <path stroke-linecap="round"
                                                                              stroke-linejoin="round"
                                                                              stroke-width="2"
                                                                              d="M4 8h16M4 16h16"></path>
                                                                    </svg>
                                                                </button>
                                                                <button type="button"
                                                                        x-show="blockForm.items.length > 1"
                                                                        @click="removeItem(index)"
                                                                        class="text-slate-400 hover:text-red-500">
                                                                    <svg class="h-5 w-5"
                                                                         xmlns="http://www.w3.org/2000/svg"
                                                                         fill="none" viewbox="0 0 24 24"
                                                                         stroke="currentColor">
                                                                        <path stroke-linecap="round"
                                                                              stroke-linejoin="round"
                                                                              stroke-width="2"
                                                                              d="M6 18L18 6M6 6l12 12"/>
                                                                    </svg>
                                                                </button>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </template>
                                            </div>
                                        </div>
                                    </template>
                                    {# End multiple Items Fields #}
                                </div>
                                <template x-if="selectedTemplate?.multiple">
                                    <div class="flex justify-end items-center mt-6">
                                        {% include '@vactory_admin/components/button/button.twig' with {
                                            'variant': 'primary',
                                            'type': 'button',
                                            'size': 'md',
                                            'text': 'Add Item'|t,
                                            'icon_left': '<svg class="h-4 w-4" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4"/></svg>',
                                            'attributes': create_attribute().setAttribute('@click', 'addItem()')
                                        } %}
                                    </div>
                                </template>
                            </div>
                        </div>
                        {% if not hideBlockConfig %}
                            {% include "@vactory_dashboard/_components/paragraph/configuration-section.html.twig" %}
                        {% endif %}
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

{# Include Media Library Modal at the root level #}
{% include "@vactory_dashboard/_components/media/media-library.html.twig" %}

{% block javascripts %}
    <script>
      document.addEventListener('alpine:init', () => {
        Alpine.data('blockForm', () => ({ // ... existing data properties ...

          validateForm() { // Get all required inputs
            const form = document.getElementById('block-form');
            const requiredInputs = form.querySelectorAll('[required]');
            let isValid = true;

            // Check each required input
            requiredInputs.forEach(input => {
              if (!input.value) {
                input.classList.add('border-red-500');
                isValid = false;
              }
            });

            return isValid;
          },

          async saveBlock() {
            if (!this.validateForm()) {
              this.showNotification('error', '{{ "Please fill in all required fields"|t }}');
              return;
            }
            this.saveChanges();
            // ... rest of the save logic ...
          },
        }));
      });

      function autocompleteLinks(models, fieldName) {
        return {
          models,
          fieldName,
          results: [],
          showList: false,
          searchTimeout: null,

          async search(query) {
            clearTimeout(this.searchTimeout);

            if (!query) {
              this.results = [];
              this.showList = false;
              return;
            }

            this.searchTimeout = setTimeout(async () => {
              try {
                const res = await fetch('/api/nodes/links?q=' + encodeURIComponent(query));
                const data = await res.json();
                this.results = data;
                this.showList = this.results.length > 0;
              } catch (e) {
                console.error('Erreur fetch links:', e);
                this.results = [];
                this.showList = false;
              }
            }, 1000);
          },

          select(item) {
            if (!item || !item.url) {
              console.warn('item ou item.url est vide ou indéfini', item);
              return;
            }

            const input = this.$refs.urlInput;
            if (input) {
              input.value = item.url;
              input.dispatchEvent(new Event('input', { bubbles: true }));
              input.focus();
            }

            this.results = [];
            this.showList = false;
          },
        };
      }

    </script>
{% endblock %}