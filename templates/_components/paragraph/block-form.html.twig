{# Block Form #}
<div x-data="{ isRTL: document.dir === 'rtl' }" :dir="isRTL ? 'rtl' : 'ltr'">
    <div class="h-full flex flex-col bg-slate-50">
        <div class="sticky top-0 z-10 bg-white rounded-xl py-4 px-6 border-b border-slate-200 flex justify-between items-center mb-6">
            <div class="flex items-center gap-x-3">
                <button @click="showBlockForm = false"
                        class="me-3 text-slate-400 hover:text-primary-500 transition-colors">
                    <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5"
                         stroke="currentColor" class="h-4 w-4">
                        <path stroke-linecap="round" stroke-linejoin="round"
                              d="M10.5 19.5 3 12m0 0 7.5-7.5M3 12h18"></path>
                    </svg>
                </button>
                <h1 class="text-lg font-semibold text-slate-900"
                    x-text="selectedTemplate?.name || '{{ 'Add Block'|t }}'"></h1>
            </div>
            <div class="max-lg:fixed max-lg:w-full max-lg:bottom-0 max-lg:left-0 max-lg:bg-white max-lg:shadow-lg max-lg:border-t max-lg:border-slate-200 max-lg:p-3 max-lg:[&>*]:w-full max-lg:z-[1] flex items-center gap-x-2">
                {% include '@vactory_admin/components/button/button.twig' with {
                    'variant': 'secondary',
                    'size': 'md',
                    'text': 'Annuler'|t,
                    'attributes': create_attribute().setAttribute('@click', 'showBlockForm = false')
                } %}
                {% include '@vactory_admin/components/button/button.twig' with {
                    'variant': 'primary',
                    'size': 'md',
                    'text': 'Enregistrer'|t,
                    'attributes': create_attribute().setAttribute('type', 'submit').setAttribute('form', 'block-form')
                } %}
            </div>
        </div>

        <div class="flex-1 overflow-y-auto">
            <div x-data="{ collapsedView: false }" class="mx-auto">
                <form id="block-form" @submit.prevent="saveBlock()" class="bg-white rounded-xl shadow-sm p-2 lg:p-8">
                    <div class="flex items-start flex-col md:flex-row gap-6">
                        <div
                                class="w-full md:w-2/3">
                            {# Extra Fields Section (if any) #}
                            <template x-if="selectedTemplate?.extra_fields">
                                <div class="mb-8 border-b border-slate-200 p-6 rounded-xl bg-slate-50">
                                    <h3 class="text-base font-semibold text-slate-900 mb-4">{{ 'General Settings'|t }}</h3>
                                    <div class="space-y-4">
                                        <template x-for="(field, fieldName) in selectedTemplate.extra_fields"
                                                  :key="fieldName">
                                            <div>
                                                <label :class="{'required': field.options?.['#required']}"
                                                       class="block text-sm font-medium text-slate-700 mb-1">
                                                    <span x-text="field.label"></span>
                                                    <span x-show="field.options?.['#required']"
                                                          class="text-red-500">*</span>
                                                </label>
                                                {# Text Input #}
                                                <template x-if="field.type === 'text'">
                                                    <input type="text" :required="field.options?.['#required'] ?? false"
                                                           x-model="blockForm.extra_fields[fieldName]"
                                                           class="w-full py-2 px-3 text-sm border border-slate-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-300 focus:border-transparent transition-all duration-150">
                                                </template>

                                                {# Checkbox #}
                                                <template x-if="field.type === 'checkbox'">
                                                    <input type="checkbox"
                                                           :required="field.options?.['#required'] ?? false"
                                                           x-model="blockForm.extra_fields[fieldName]">
                                                </template>

                                                {# Select Input #}
                                                <template x-if="field.type === 'select'">
                                                    <select :required="field.options?.['#required'] ?? false"
                                                            x-model="blockForm.extra_fields[fieldName]"
                                                            class="w-full py-2 px-3 text-sm border border-slate-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-300 focus:border-transparent transition-all duration-150">
                                                        <option value="">{{ 'Select...'|t }}</option>
                                                        <template x-for="option in field.options['#options']"
                                                                  :key="Object.keys(option)[0]">
                                                            <option :value="Object.keys(option)[0]"
                                                                    x-text="Object.values(option)[0]"></option>
                                                        </template>
                                                    </select>
                                                </template>

                                                {# Textarea #}
                                                <template x-if="field.type === 'textarea'">
                                                    <textarea :required="field.options?.['#required'] ?? false"
                                                              x-model="blockForm.extra_fields[fieldName]" rows="4"
                                                              class="w-full py-2 px-3 text-sm border border-slate-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-300 focus:border-transparent transition-all duration-150"></textarea>
                                                </template>

                                                {# Text Format #}
                                                <template x-if="field.type === 'text_format'">
                                                    <textarea :required="field.options?.['#required'] ?? false"
                                                              x-model="blockForm.extra_fields[fieldName]" rows="4"
                                                              class="w-full py-2 px-3 text-sm border border-slate-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-300 focus:border-transparent transition-all duration-150"></textarea>
                                                </template>

                                                {# URL Extended Input #}
                                                <template x-if="field.type === 'url_extended'">
                                                    {% include "@vactory_dashboard/_components/fields/link-field.html.twig" with { xmodel: 'blockForm.extra_fields' } %}
                                                </template>

                                                {# Image Input #}
                                                <template x-if="field.type === 'image'">
                                                    {% include "@vactory_dashboard/_components/media/media-selector.html.twig" with {'url': 'blockForm.extra_fields[fieldName].url', 'path': 'blockForm.extra_fields[fieldName].path', 'key': 'blockForm.extra_fields[fieldName].key', 'type': 'image'} %}
                                                </template>

                                                {# Image Input #}
                                                <template x-if="field.type === 'file'">
                                                    {% include "@vactory_dashboard/_components/media/media-selector.html.twig" with {'name': 'blockForm.extra_fields[fieldName].name', 'url': 'blockForm.extra_fields[fieldName].url', 'path': 'blockForm.extra_fields[fieldName].path', 'key': 'blockForm.extra_fields[fieldName].key', 'type': 'file'} %}
                                                </template>

                                                {# Image Input #}
                                                <template x-if="field.type === 'remote_video'">
                                                    {% include "@vactory_dashboard/_components/media/media-selector.html.twig" with {'name': 'blockForm.extra_fields[fieldName].name', 'url': 'blockForm.extra_fields[fieldName].url', 'path': 'blockForm.extra_fields[fieldName].path', 'key': 'blockForm.extra_fields[fieldName].key', 'type': 'remote_video'} %}
                                                </template>

                                                {# JSON API Collection #}
                                                <template x-if="field.type === 'json_api_collection'">
                                                    <span>[JSON API COLLECTION] You are not allowed to modify or add new items to this field</span>
                                                </template>

                                                {# Webform Decoupled #}
                                                <template x-if="field.type === 'webform_decoupled'">
                                                    <span>[WEBFORM DECOUPLED] You are not allowed to modify this field</span>
                                                </template>

                                            </div>
                                        </template>
                                    </div>
                                </div>
                            </template>
                            {# Main Fields Section #}
                            <div>
                                <div x-show="selectedTemplate?.fields">

                                    {# Single Item Fields #}
                                    <template x-if="!selectedTemplate?.multiple">
                                        <div class="flex flex-col gap-6 bg-slate-50 p-4 rounded-xl">
                                            <template x-for="(field, fieldName) in selectedTemplate.fields"
                                                      :key="fieldName">
                                                <div>
                                                    <label :class="{'required': field.options?.['#required']}"
                                                           class="block text-sm font-medium text-slate-700 mb-1">
                                                        <span x-text="field.label"></span>
                                                        <span x-show="field.options?.['#required']"
                                                              class="text-red-500">*</span>
                                                    </label>

                                                    {# Text Input #}
                                                    <template x-if="field.type === 'text'">
                                                        <input type="text"
                                                               :required="field.options?.['#required'] ?? false"
                                                               x-model="blockForm.fields[fieldName]"
                                                               class="w-full py-2 px-3 text-sm border border-slate-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-300 focus:border-transparent transition-all duration-150">
                                                    </template>

                                                    {# Checkbox #}
                                                    <template x-if="field.type === 'checkbox'">
                                                        <input type="checkbox"
                                                               :required="field.options?.['#required'] ?? false"
                                                               x-model="blockForm.fields[fieldName]">
                                                    </template>

                                                    {# Select Input #}
                                                    <template x-if="field.type === 'select'">
                                                        <select :required="field.options?.['#required'] ?? false"
                                                                x-model="blockForm.fields[fieldName]"
                                                                class="w-full py-2 px-3 text-sm border border-slate-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-300 focus:border-transparent transition-all duration-150">
                                                            <option value="">{{ 'Select...'|t }}</option>
                                                            <template x-for="option in field.options['#options']"
                                                                      :key="Object.keys(option)[0]">
                                                                <option :value="Object.keys(option)[0]"
                                                                        x-text="Object.values(option)[0]"></option>
                                                            </template>
                                                        </select>
                                                    </template>

                                                    {# Textarea #}
                                                    <template x-if="field.type === 'textarea'">
                                                        <textarea :required="field.options?.['#required'] ?? false"
                                                                  x-model="blockForm.fields[fieldName]" rows="4"
                                                                  class="w-full py-2 px-3 text-sm border border-slate-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-300 focus:border-transparent transition-all duration-150"></textarea>
                                                    </template>

                                                    {# Text Format #}
                                                    <template x-if="field.type === 'text_format'">
                                                        <textarea :required="field.options?.['#required'] ?? false"
                                                                  x-model="blockForm.fields[fieldName]" rows="4"
                                                                  class="w-full py-2 px-3 text-sm border border-slate-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-300 focus:border-transparent transition-all duration-150"></textarea>
                                                    </template>

                                                    {# URL Extended Input #}
                                                    <template x-if="field.type === 'url_extended'">
                                                        {% include "@vactory_dashboard/_components/fields/link-field.html.twig"  with { xmodel: 'blockForm.fields' }   %}
                                                    </template>

                                                    {# Image Input #}
                                                    <template x-if="field.type === 'image'">
                                                        {% include "@vactory_dashboard/_components/media/media-selector.html.twig" with {'url': 'blockForm.fields[fieldName].url', 'path': 'blockForm.fields[fieldName].path', 'key': 'blockForm.fields[fieldName].key', 'type': 'image'} %}
                                                    </template>

                                                    {# File Input #}
                                                    <template x-if="field.type === 'file'">
                                                        {% include "@vactory_dashboard/_components/media/media-selector.html.twig" with {'name': 'blockForm.fields[fieldName].name', 'url': 'blockForm.fields[fieldName].url', 'path': 'blockForm.fields[fieldName].path', 'key': 'blockForm.fields[fieldName].key', 'type': 'file'} %}
                                                    </template>

                                                    {# File Input #}
                                                    <template x-if="field.type === 'remote_video'">
                                                        {% include "@vactory_dashboard/_components/media/media-selector.html.twig" with {'name': 'blockForm.fields[fieldName].name', 'url': 'blockForm.fields[fieldName].url', 'path': 'blockForm.fields[fieldName].path', 'key': 'blockForm.fields[fieldName].key', 'type': 'remote_video'} %}
                                                    </template>

                                                    {# JSON API Collection #}
                                                    <template x-if="field.type === 'json_api_collection'">
                                                        <span>[JSON API COLLECTION] You are not allowed to modify or add new items to this field</span>
                                                    </template>

                                                    {# Webform Decoupled #}
                                                    <template x-if="field.type === 'webform_decoupled'">
                                                        <span>[WEBFORM DECOUPLED] You are not allowed to modify this field</span>
                                                    </template>
                                                </div>
                                            </template>
                                        </div>
                                    </template>

                                    {# Multiple Items Fields #}
                                    <template x-if="selectedTemplate?.multiple">
                                        <div>
                                            <template x-if="selectedTemplate?.multiple">
                                                <div class="flex justify-between items-center mb-6">
                                                    <span class="flex items-center text-sm font-medium text-slate-700">
                                                        View Mode
                                                        <span class="ml-1 flex justify-end text-xs font-medium text-primary-400">
                                                            (
                                                                <span class="inline-block mr-1" x-text="blockForm.items.length"></span>
                                                                <span x-show="blockForm.items.length == 1" class="inline-block">élément disponible</span> 
                                                                <span x-show="blockForm.items.length > 1" class="inline-block">éléments disponibles</span> 
                                                            )
                                                        </span>
                                                    </span>
                                                    {% include '@vactory_admin/components/button/button.twig' with {
                                                        'variant': 'secondary',
                                                        'size': 'sm',
                                                        'text': 'Toggle View'|t,
                                                        'attributes': create_attribute()
                                                            .setAttribute('@click', 'collapsedView = !collapsedView')
                                                            .setAttribute('type', 'button')
                                                    } %}
                                                </div>
                                            </template>
                                            <div x-show="!collapsedView" class="space-y-4">
                                                <template x-for="(item, index) in blockForm.items" :key="index">
                                                    <div :class="item._isNewItem ? 'bg-slate-200' : 'bg-slate-50'" class="p-4 rounded-xl relative transition-colors duration-300" draggable="true"
                                                         :data-index="index" :data-item-index="index" @dragstart="dragStartItem($event)"
                                                         @dragover.prevent="$event.target.closest('[draggable]').classList.add('bg-slate-100')"
                                                         @dragleave.prevent="$event.target.closest('[draggable]').classList.remove('bg-slate-100')"
                                                         @drop.prevent="dragEndItem($event)"
                                                         @dragend="$event.target.closest('[draggable]').classList.remove('bg-slate-100')">
                                                        <div class="absolute top-2 end-2 flex items-center gap-x-2">
                                                            <button type="button"
                                                                    class="cursor-move text-slate-400 hover:text-primary-500">
                                                                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5"
                                                                     fill="none" viewbox="0 0 24 24"
                                                                     stroke="currentColor">
                                                                    <path stroke-linecap="round" stroke-linejoin="round"
                                                                          stroke-width="2" d="M4 8h16M4 16h16"></path>
                                                                </svg>
                                                            </button>
                                                            <button type="button" x-show="blockForm.items.length > 1"
                                                                    @click="removeItem(index)"
                                                                    class="text-slate-400 hover:text-red-500">
                                                                <svg class="h-5 w-5" xmlns="http://www.w3.org/2000/svg"
                                                                     fill="none" viewbox="0 0 24 24"
                                                                     stroke="currentColor">
                                                                    <path stroke-linecap="round" stroke-linejoin="round"
                                                                          stroke-width="2" d="M6 18L18 6M6 6l12 12"/>
                                                                </svg>
                                                            </button>
                                                        </div>
                                                        <div class="space-y-4 mt-6">
                                                            <template
                                                                    x-for="(field, fieldName) in selectedTemplate.fields"
                                                                    :key="fieldName">
                                                                <div>
                                                                    <label :class="{'required': field.options?.['#required']}"
                                                                           class="block text-sm font-medium text-slate-700 mb-1">
                                                                        <span x-text="field.label"></span>
                                                                        <span x-show="field.options?.['#required']"
                                                                              class="text-red-500">*</span>
                                                                    </label>

                                                                    {# Text Input #}
                                                                    <template x-if="field.type === 'text'">
                                                                        <input type="text"
                                                                               :required="field.options?.['#required'] ?? false"
                                                                               x-model="item[fieldName]"
                                                                               class="w-full py-2 px-3 text-sm border border-slate-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-300 focus:border-transparent bg-white transition-all duration-150">
                                                                    </template>

                                                                    {# Checkbox #}
                                                                    <template x-if="field.type === 'checkbox'">
                                                                        <input type="checkbox"
                                                                               :required="field.options?.['#required'] ?? false"
                                                                               x-model="item[fieldName]">
                                                                    </template>


                                                                    {# Textarea #}
                                                                    <template x-if="field.type === 'textarea'">
                                                                        <textarea
                                                                                :required="field.options?.['#required'] ?? false"
                                                                                x-model="item[fieldName]" rows="4"
                                                                                class="w-full py-2 px-3 text-sm border border-slate-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-300 focus:border-transparent bg-white transition-all duration-150"></textarea>
                                                                    </template>

                                                                    {# Text Format #}
                                                                    <template x-if="field.type === 'text_format'">
                                                                        <textarea
                                                                                :required="field.options?.['#required'] ?? false"
                                                                                x-model="item[fieldName]" rows="4"
                                                                                class="w-full py-2 px-3 text-sm border border-slate-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-300 focus:border-transparent bg-white transition-all duration-150"></textarea>
                                                                    </template>

                                                                    {# Select Input #}
                                                                    <template x-if="field.type === 'select'">
                                                                        <select :required="field.options?.['#required'] ?? false"
                                                                                x-model="item[fieldName]"
                                                                                class="w-full py-2 px-3 text-sm border border-slate-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-300 focus:border-transparent bg-white transition-all duration-150">
                                                                            <option value="">{{ 'Select...'|t }}</option>
                                                                            <template
                                                                                    x-for="option in field.options['#options']"
                                                                                    :key="Object.keys(option)[0]">
                                                                                <option :value="Object.keys(option)[0]"
                                                                                        x-text="Object.values(option)[0]"></option>
                                                                            </template>
                                                                        </select>
                                                                    </template>

                                                                    {# URL Extended Input #}
                                                                  <template x-if="field.type === 'url_extended'">
                                                                           {% include "@vactory_dashboard/_components/fields/link-field.html.twig" with { xmodel: 'item' } %}
                                                                   </template>


                                                                    {# Image Input #}
                                                                    <template x-if="field.type === 'image'">
                                                                        <div>
                                                                            {% include "@vactory_dashboard/_components/media/media-selector.html.twig" with {'url': 'item[fieldName].url', 'path': 'item[fieldName].path', 'key': 'item[fieldName].key', 'type': 'image'} %}
                                                                        </div>
                                                                    </template>

                                                                    {# File Input #}
                                                                    <template x-if="field.type === 'file'">
                                                                        {% include "@vactory_dashboard/_components/media/media-selector.html.twig" with {'name': 'item[fieldName].name', 'url': 'item[fieldName].url', 'path': 'item[fieldName].path', 'key': 'item[fieldName].key', 'type': 'file'} %}
                                                                    </template>

                                                                    {# File Input #}
                                                                    <template x-if="field.type === 'remote_video'">
                                                                        {% include "@vactory_dashboard/_components/media/media-selector.html.twig" with {'name': 'item[fieldName].name', 'url': 'item[fieldName].url', 'path': 'item[fieldName].path', 'key': 'item[fieldName].key', 'type': 'remote_video'} %}
                                                                    </template>

                                                                    {# JSON API Collection #}
                                                                    <template
                                                                            x-if="field.type === 'json_api_collection'">
                                                                        <span>[JSON API COLLECTION] You are not allowed to modify or add new items to this field</span>
                                                                    </template>

                                                                    {# Webform Decoupled #}
                                                                    <template x-if="field.type === 'webform_decoupled'">
                                                                        <span>[WEBFORM DECOUPLED] You are not allowed to modify this field</span>
                                                                    </template>
                                                                </div>
                                                            </template>
                                                        </div>
                                                    </div>
                                                </template>
                                            </div>
                                            <div x-show="collapsedView" class="space-y-4">
                                                <template x-for="(item, index) in blockForm.items" :key="index">
                                                    <div :class="item._isNewItem ? 'bg-slate-200' : 'bg-slate-50'" class="p-4 rounded-xl relative transition-colors duration-300" draggable="true"
                                                         :data-index="index" :data-item-index="index" @dragstart="dragStartItem($event)"
                                                         @dragover.prevent="$event.target.closest('[draggable]').classList.add('bg-slate-100')"
                                                         @dragleave.prevent="$event.target.closest('[draggable]').classList.remove('bg-slate-100')"
                                                         @drop.prevent="dragEndItem($event)"
                                                         @dragend="$event.target.closest('[draggable]').classList.remove('bg-slate-100')">
                                                        <div class="flex justify-between items-center">
                                                            <span class="text-lg font-medium text-slate-900"
                                                                  x-text="'Item ' + (index + 1)"></span>
                                                            <div class="flex items-center gap-x-2">
                                                                <button type="button"
                                                                        class="cursor-move text-slate-400 hover:text-primary-500">
                                                                    <svg xmlns="http://www.w3.org/2000/svg"
                                                                         class="h-5 w-5"
                                                                         fill="none" viewbox="0 0 24 24"
                                                                         stroke="currentColor">
                                                                        <path stroke-linecap="round"
                                                                              stroke-linejoin="round"
                                                                              stroke-width="2"
                                                                              d="M4 8h16M4 16h16"></path>
                                                                    </svg>
                                                                </button>
                                                                <button type="button"
                                                                        x-show="blockForm.items.length > 1"
                                                                        @click="removeItem(index)"
                                                                        class="text-slate-400 hover:text-red-500">
                                                                    <svg class="h-5 w-5"
                                                                         xmlns="http://www.w3.org/2000/svg"
                                                                         fill="none" viewbox="0 0 24 24"
                                                                         stroke="currentColor">
                                                                        <path stroke-linecap="round"
                                                                              stroke-linejoin="round"
                                                                              stroke-width="2"
                                                                              d="M6 18L18 6M6 6l12 12"/>
                                                                    </svg>
                                                                </button>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </template>
                                            </div>
                                        </div>
                                    </template>
                                </div>
                                <template x-if="selectedTemplate?.multiple">
                                    <div class="flex justify-end items-center mt-6">
                                        {% include '@vactory_admin/components/button/button.twig' with {
                                            'variant': 'primary',
                                            'type': 'button',
                                            'size': 'md',
                                            'text': 'Add Item'|t,
                                            'icon_left': '<svg class="h-4 w-4" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4"/></svg>',
                                            'attributes': create_attribute().setAttribute('@click', 'addItem()')
                                        } %}
                                    </div>
                                </template>
                            </div>
                        </div>
                        {# Block Configuration Section #}
                        <div class="w-full sticky top-0 md:w-1/3 border-b border-slate-200 p-6 rounded-xl bg-slate-50">
                            <h3 class="text-base font-semibold text-slate-900 mb-4">{{ 'Block Configuration'|t }}</h3>
                            <div
                                    class="space-y-4">
                                {# Block Title #}
                                <div>
                                    <label class="block text-sm font-medium text-slate-700 mb-1 required">
                                        {{ 'Block Title'|t }}
                                        <span class="text-red-500">*</span>
                                    </label>
                                    <input type="text" required x-model="blockForm.config.title"
                                           @invalid="$el.classList.add('border-red-500')"
                                           @input="$el.classList.remove('border-red-500')"
                                           class="w-full py-2 px-3 text-sm border border-slate-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-300 focus:border-transparent transition-all duration-150">
                                </div>

                                {# Show Title Checkbox #}
                                <div class="flex items-center">
                                    <input type="checkbox" x-model="blockForm.config.show_title"
                                           class="h-4 w-4 text-primary-600 focus:ring-primary-500 border-slate-300 rounded">
                                    <label class="ms-2 block text-sm text-slate-700">
                                        {{ 'Show title'|t }}
                                    </label>
                                </div>

                                {# Section Appearance #}
                                <div x-data="{ isOpen: false }"
                                     class="border border-slate-200 rounded-xl shadow bg-white">
                                    <button @click="isOpen = !isOpen" type="button"
                                            class="flex items-center justify-between w-full text-left text-sm font-medium text-slate-700 hover:text-slate-900 bg-slate-100 p-2 px-3 rounded-lg">
                                        <span>{{ 'Section Appearance'|t }}</span>
                                        <svg class="h-5 w-5 transform transition-transform duration-200"
                                             :class="{'rotate-180': isOpen}" xmlns="http://www.w3.org/2000/svg"
                                             viewbox="0 0 20 20" fill="currentColor">
                                            <path fill-rule="evenodd"
                                                  d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z"
                                                  clip-rule="evenodd"/>
                                        </svg>
                                    </button>

                                    <div x-show="isOpen" x-transition:enter="transition ease-out duration-100"
                                         x-transition:enter-start="transform opacity-0 scale-95"
                                         x-transition:enter-end="transform opacity-100 scale-100"
                                         x-transition:leave="transition ease-in duration-75"
                                         x-transition:leave-start="transform opacity-100 scale-100"
                                         x-transition:leave-end="transform opacity-0 scale-95" class="space-y-4 p-3">

                                        <div
                                                class="flex flex-col gap-3">
                                            {# Width #}
                                            <div class="flex-1">
                                                <label class="block text-sm font-medium text-slate-700 mb-1">
                                                    {{ 'Width'|t }}
                                                </label>
                                                <select x-model="blockForm.config.width"
                                                        class="w-full py-2 px-3 text-sm border border-slate-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-300 focus:border-transparent transition-all duration-150">
                                                    <option value="full_width">{{ 'Full width'|t }}</option>
                                                    <option value="narrow_width">{{ 'Narrow width'|t }}</option>
                                                    <option value="no_container">{{ 'No container'|t }}</option>
                                                </select>
                                            </div>

                                            {# Spacing #}
                                            <div class="flex-1">
                                                <label class="block text-sm font-medium text-slate-700 mb-1">
                                                    {{ 'Spacing'|t }}
                                                </label>
                                                <select x-model="blockForm.config.spacing"
                                                        class="w-full py-2 px-3 text-sm border border-slate-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-300 focus:border-transparent transition-all duration-150">
                                                    <option value="_none">{{ 'None'|t }}</option>
                                                    <option value="small_space">{{ 'Small space'|t }}</option>
                                                    <option value="big_space">{{ 'Big space'|t }}</option>
                                                    <option value="no_space">{{ 'No space'|t }}</option>
                                                </select>
                                            </div>
                                        </div>

                                        {# CSS Classes #}
                                        <div>
                                            <label class="block text-sm font-medium text-slate-700 mb-1">
                                                {{ 'CSS class(es)'|t }}
                                            </label>
                                            <input type="text" x-model="blockForm.config.css_classes"
                                                   class="w-full py-2 px-3 text-sm border border-slate-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-300 focus:border-transparent transition-all duration-150"
                                                   placeholder="{{ 'Add custom CSS classes'|t }}">
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

{# Include Media Library Modal at the root level #}
{% include "@vactory_dashboard/_components/media/media-library.html.twig" %}

{% block javascripts %}
    <script>
      document.addEventListener('alpine:init', () => {
        Alpine.data('blockForm', () => ({ // ... existing data properties ...

          validateForm() { // Get all required inputs
            const form = document.getElementById('block-form');
            const requiredInputs = form.querySelectorAll('[required]');
            let isValid = true;

            // Check each required input
            requiredInputs.forEach(input => {
              if (!input.value) {
                input.classList.add('border-red-500');
                isValid = false;
              }
            });

            return isValid;
          },

          async saveBlock() {
            if (!this.validateForm()) {
              this.showNotification('error', '{{ "Please fill in all required fields"|t }}');
              return;
            }
            this.saveChanges();
            // ... rest of the save logic ...
          },
        }));
      });

       function autocompleteLinks(models, fieldName) {
       return {
        models,
        fieldName,
        results: [],
        showList: false,
        searchTimeout: null,

         async search(query) {
        clearTimeout(this.searchTimeout);

          if (!query) {
           this.results = [];
           this.showList = false;
           return;
         }

       this.searchTimeout = setTimeout(async () => {
        try {
          const res = await fetch('/api/nodes/links?q=' + encodeURIComponent(query));
          const data = await res.json();
          this.results = data;
          this.showList = this.results.length > 0;
        } catch (e) {
          console.error('Erreur fetch links:', e);
          this.results = [];
          this.showList = false;
        }
      }, 1000);
    },

    select(item) {
      if (!item || !item.url) {
        console.warn('item ou item.url est vide ou indéfini', item);
        return;
      }

     

      const input = this.$refs.urlInput;
      if (input) {
        input.value = item.url;
        input.dispatchEvent(new Event('input', { bubbles: true }));
        input.focus();
      }

      this.results = [];
      this.showList = false;
    }
  };
}

    </script>
{% endblock %}
