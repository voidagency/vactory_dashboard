<div class="w-full sticky top-0 md:w-1/3 border-b border-slate-200 p-6 rounded-xl bg-slate-50">
    <h3 class="text-base font-semibold text-slate-900 mb-4">{{ 'Appearance'|t }}</h3>
    <div class="space-y-4">
        {# Section Appearance #}
        <div x-data="{ isOpen: false }"
                class="border border-slate-200 rounded-xl shadow bg-white">
            <button @click="isOpen = !isOpen" type="button"
                    class="flex items-center justify-between w-full text-left text-sm font-medium text-slate-700 hover:text-slate-900 bg-slate-100 p-2 px-3 rounded-lg">
                <span>{{ 'Section Appearance'|t }}</span>
                <svg class="h-5 w-5 transform transition-transform duration-200"
                        :class="{'rotate-180': isOpen}" xmlns="http://www.w3.org/2000/svg"
                        viewbox="0 0 20 20" fill="currentColor">
                    <path fill-rule="evenodd"
                            d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z"
                            clip-rule="evenodd"/>
                </svg>
            </button>

            <div x-show="isOpen" x-transition:enter="transition ease-out duration-100"
                    x-transition:enter-start="transform opacity-0 scale-95"
                    x-transition:enter-end="transform opacity-100 scale-100"
                    x-transition:leave="transition ease-in duration-75"
                    x-transition:leave-start="transform opacity-100 scale-100"
                    x-transition:leave-end="transform opacity-0 scale-95" class="space-y-4 p-3">

                <div class="flex flex-col gap-3">
                    {# Width #}
                    <div class="flex-1">
                        <label class="view text-sm font-medium text-slate-700 mb-1">
                            {{ 'Width'|t }}
                        </label>
                        <select x-model="{{ paragraph }}.config.width"
                                class="w-full py-2 px-3 text-sm border border-slate-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-300 focus:border-transparent transition-all duration-150">
                            <option value="full_width">{{ 'Full width'|t }}</option>
                            <option value="narrow_width">{{ 'Narrow width'|t }}</option>
                            <option value="no_container">{{ 'No container'|t }}</option>
                        </select>
                    </div>
                </div>

                {# Spacing #}
                {% if not isParagraphMultiple %}
                <div class="flex-1">
                    <label class="block text-sm font-medium text-slate-700 mb-1">
                        {{ 'Spacing'|t }}
                    </label>
                    <select x-model="{{ paragraph }}.config.spacing"
                            class="w-full py-2 px-3 text-sm border border-slate-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-300 focus:border-transparent transition-all duration-150">
                        <option value="_none">{{ 'None'|t }}</option>
                        <option value="small_space">{{ 'Small space'|t }}</option>
                        <option value="big_space">{{ 'Big space'|t }}</option>
                        <option value="no_space">{{ 'No space'|t }}</option>
                    </select>
                </div>
                {% endif %}

                {# CSS Classes #}
                <div>
                    <label class="view text-sm font-medium text-slate-700 mb-1">
                        {{ 'CSS class(es)'|t }}
                    </label>
                    <input type="text" 
                            x-model="{{ paragraph }}.config.css_classes"
                            class="w-full py-2 px-3 text-sm border border-slate-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-300 focus:border-transparent transition-all duration-150"
                            placeholder="{{ 'Add custom CSS classes'|t }}">
                </div>
            </div>
        </div>

        {# Couleur image de fond #}
        <div x-data="{ isOpen: false }"
                class="border border-slate-200 rounded-xl shadow bg-white">
            <button @click="isOpen = !isOpen" type="button"
                    class="flex items-center justify-between w-full text-left text-sm font-medium text-slate-700 hover:text-slate-900 bg-slate-100 p-2 px-3 rounded-lg">
                <span>{{ 'Couleur/Image de fond'|t }}</span>
                <svg class="h-5 w-5 transform transition-transform duration-200"
                        :class="{'rotate-180': isOpen}" xmlns="http://www.w3.org/2000/svg"
                        viewbox="0 0 20 20" fill="currentColor">
                    <path fill-rule="evenodd"
                            d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z"
                            clip-rule="evenodd"/>
                </svg>
            </button>

            <div x-show="isOpen" x-transition:enter="transition ease-out duration-100"
                    x-transition:enter-start="transform opacity-0 scale-95"
                    x-transition:enter-end="transform opacity-100 scale-100"
                    x-transition:leave="transition ease-in duration-75"
                    x-transition:leave-start="transform opacity-100 scale-100"
                    x-transition:leave-end="transform opacity-0 scale-95" class="space-y-4 p-3">

                <div class="flex flex-col gap-3">
                    {# Color picker #}
                    <div>
                        <label class="view text-sm font-medium text-slate-700 mb-1">
                            {{ 'Couleur'|t }}
                        </label>
                        <input 
                            type="color"
                            id="config-color"
                            x-model="{{ paragraph }}.config.color" 
                            class="mt-1 block w-10 h-10 border rounded cursor-pointer"
                        >
                        <span 
                            @click="{{ paragraph }}.config.color = '#ff0000'"
                            class="cursor-pointer">
                            Clear
                        </span>
                    </div>

                    {# Image #}
                    <div>
                        {% include "@vactory_dashboard/_components/media/media-selector.html.twig" with {
                            'isMultiple': 'true',
                            'url': paragraph ~ '.config.image',
                            'path': 'fieldName', 
                            'key': '-1', 
                            'type': 'image',
                            'appearance': true,
                        } %}
                    </div>
                </div>
            </div>
        </div>

        {# Positionner image #}
        <div x-data="{ isOpen: false }"
                class="border border-slate-200 rounded-xl shadow bg-white">
            <button @click="isOpen = !isOpen" type="button"
                    class="flex items-center justify-between w-full text-left text-sm font-medium text-slate-700 hover:text-slate-900 bg-slate-100 p-2 px-3 rounded-lg">
                <span>{{ 'Positionner image'|t }}</span>
                <svg class="h-5 w-5 transform transition-transform duration-200"
                        :class="{'rotate-180': isOpen}" xmlns="http://www.w3.org/2000/svg"
                        viewbox="0 0 20 20" fill="currentColor">
                    <path fill-rule="evenodd"
                            d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z"
                            clip-rule="evenodd"/>
                </svg>
            </button>

            <div x-show="isOpen" x-transition:enter="transition ease-out duration-100"
                    x-transition:enter-start="transform opacity-0 scale-95"
                    x-transition:enter-end="transform opacity-100 scale-100"
                    x-transition:leave="transition ease-in duration-75"
                    x-transition:leave-start="transform opacity-100 scale-100"
                    x-transition:leave-end="transform opacity-0 scale-95" class="space-y-4 p-3">

                <div class="flex flex-col gap-3">
                    {# Positionner l'image - verticalement #}
                    <div class="flex-1">
                        <label class="view text-sm font-medium text-slate-700 mb-1">
                            {{ "Positionner l'image - verticalement"|t }}
                        </label>
                        <select x-model="{{ paragraph }}.config.positionImageY"
                                class="w-full py-2 px-3 text-sm border border-slate-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-300 focus:border-transparent transition-all duration-150">
                            <option value="_none">{{ 'None'|t }}</option>
                            <option value="centrer">{{ 'Centrer'|t }}</option>
                            <option value="top">{{ 'Haut'|t }}</option>
                            <option value="bottom">{{ 'bas'|t }}</option>
                        </select>
                    </div>

                    {# Positionner l'image - Horizontalement #}
                    <div class="flex-1">
                        <label class="view text-sm font-medium text-slate-700 mb-1">
                            {{ "Positionner l'image - Horizontalement"|t }}
                        </label>
                        <select x-model="{{ paragraph }}.config.positionImageX"
                                class="w-full py-2 px-3 text-sm border border-slate-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-300 focus:border-transparent transition-all duration-150">
                            <option value="_none">{{ 'None'|t }}</option>
                            <option value="centrer">{{ 'Centrer'|t }}</option>
                            <option value="left">{{ 'A gauche'|t }}</option>
                            <option value="right">{{ 'A droite'|t }}</option>
                        </select>
                    </div>

                    {# Size de l'image de fond #}
                    <div class="flex-1">
                        <label class="view text-sm font-medium text-slate-700 mb-1">
                            {{ "Size de l'image de fond"|t }}
                        </label>
                        <select x-model="{{ paragraph }}.config.imageSize"
                                class="w-full py-2 px-3 text-sm border border-slate-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-300 focus:border-transparent transition-all duration-150">
                            <option value="_none">{{ 'None'|t }}</option>
                            <option value="cover">{{ 'Cover'|t }}</option>
                            <option value="contain">{{ 'Contain'|t }}</option>
                        </select>
                    </div>
                </div>
            </div>
        </div>

        {# Display #}
        <div x-data="{ isOpen: false }"
                class="border border-slate-200 rounded-xl shadow bg-white">
            <button @click="isOpen = !isOpen" type="button"
                    class="flex items-center justify-between w-full text-left text-sm font-medium text-slate-700 hover:text-slate-900 bg-slate-100 p-2 px-3 rounded-lg">
                <span>{{ 'Display'|t }}</span>
                <svg class="h-5 w-5 transform transition-transform duration-200"
                        :class="{'rotate-180': isOpen}" xmlns="http://www.w3.org/2000/svg"
                        viewbox="0 0 20 20" fill="currentColor">
                    <path fill-rule="evenodd"
                            d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z"
                            clip-rule="evenodd"/>
                </svg>
            </button>

            <div x-show="isOpen" x-transition:enter="transition ease-out duration-100"
                    x-transition:enter-start="transform opacity-0 scale-95"
                    x-transition:enter-end="transform opacity-100 scale-100"
                    x-transition:leave="transition ease-in duration-75"
                    x-transition:leave-start="transform opacity-100 scale-100"
                    x-transition:leave-end="transform opacity-0 scale-95" class="space-y-4 p-3">

                <div class="flex flex-col gap-3">
                    {# Cacher sur Mobile #}
                    <div class="flex items-center">
                        <input type="checkbox" 
                            x-model="{{ paragraph }}.config.hideMobile"
                            class="h-4 w-4 text-primary-600 focus:ring-primary-500 border-slate-300 rounded">
                        <label class="ms-2 block text-sm text-slate-700">
                            {{ 'Cacher sur Mobile'|t }}
                        </label>
                    </div>

                    {# Cacher sur Desktop #}
                    <div class="flex items-center">
                        <input type="checkbox" 
                            x-model="{{ paragraph }}.config.hideDesktop"
                            class="h-4 w-4 text-primary-600 focus:ring-primary-500 border-slate-300 rounded">
                        <label class="ms-2 block text-sm text-slate-700">
                            {{ 'Cacher sur Desktop'|t }}
                        </label>
                    </div>
                </div>
            </div>
        </div>
        {# Activer Parallax #}
        <div class="flex items-center">
            <input type="checkbox"
                x-model="{{ paragraph }}.config.enableParallax"
                class="h-4 w-4 text-primary-600 focus:ring-primary-500 border-slate-300 rounded">
            <label class="ms-2 block text-sm text-slate-700">
                {{ 'Activer Parallax'|t }}
            </label>
        </div>
    </div>
</div>